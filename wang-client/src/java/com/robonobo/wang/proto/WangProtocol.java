// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: wang-client/src/java/com/robonobo/wang/proto/wang.proto

package com.robonobo.wang.proto;

public final class WangProtocol {
  private WangProtocol() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class BalanceMsg extends
      com.google.protobuf.GeneratedMessage {
    // Use BalanceMsg.newBuilder() to construct.
    private BalanceMsg() {
      initFields();
    }
    private BalanceMsg(boolean noInit) {}
    
    private static final BalanceMsg defaultInstance;
    public static BalanceMsg getDefaultInstance() {
      return defaultInstance;
    }
    
    public BalanceMsg getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.robonobo.wang.proto.WangProtocol.internal_static_wang_BalanceMsg_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.robonobo.wang.proto.WangProtocol.internal_static_wang_BalanceMsg_fieldAccessorTable;
    }
    
    // required double amount = 1;
    public static final int AMOUNT_FIELD_NUMBER = 1;
    private boolean hasAmount;
    private double amount_ = 0D;
    public boolean hasAmount() { return hasAmount; }
    public double getAmount() { return amount_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasAmount) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAmount()) {
        output.writeDouble(1, getAmount());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAmount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, getAmount());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.robonobo.wang.proto.WangProtocol.BalanceMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.BalanceMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.BalanceMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.BalanceMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.BalanceMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.BalanceMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.BalanceMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.wang.proto.WangProtocol.BalanceMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.wang.proto.WangProtocol.BalanceMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.BalanceMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.robonobo.wang.proto.WangProtocol.BalanceMsg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.robonobo.wang.proto.WangProtocol.BalanceMsg result;
      
      // Construct using com.robonobo.wang.proto.WangProtocol.BalanceMsg.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.robonobo.wang.proto.WangProtocol.BalanceMsg();
        return builder;
      }
      
      protected com.robonobo.wang.proto.WangProtocol.BalanceMsg internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.robonobo.wang.proto.WangProtocol.BalanceMsg();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.robonobo.wang.proto.WangProtocol.BalanceMsg.getDescriptor();
      }
      
      public com.robonobo.wang.proto.WangProtocol.BalanceMsg getDefaultInstanceForType() {
        return com.robonobo.wang.proto.WangProtocol.BalanceMsg.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.robonobo.wang.proto.WangProtocol.BalanceMsg build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.robonobo.wang.proto.WangProtocol.BalanceMsg buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.robonobo.wang.proto.WangProtocol.BalanceMsg buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.robonobo.wang.proto.WangProtocol.BalanceMsg returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.robonobo.wang.proto.WangProtocol.BalanceMsg) {
          return mergeFrom((com.robonobo.wang.proto.WangProtocol.BalanceMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.robonobo.wang.proto.WangProtocol.BalanceMsg other) {
        if (other == com.robonobo.wang.proto.WangProtocol.BalanceMsg.getDefaultInstance()) return this;
        if (other.hasAmount()) {
          setAmount(other.getAmount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              setAmount(input.readDouble());
              break;
            }
          }
        }
      }
      
      
      // required double amount = 1;
      public boolean hasAmount() {
        return result.hasAmount();
      }
      public double getAmount() {
        return result.getAmount();
      }
      public Builder setAmount(double value) {
        result.hasAmount = true;
        result.amount_ = value;
        return this;
      }
      public Builder clearAmount() {
        result.hasAmount = false;
        result.amount_ = 0D;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:wang.BalanceMsg)
    }
    
    static {
      defaultInstance = new BalanceMsg(true);
      com.robonobo.wang.proto.WangProtocol.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:wang.BalanceMsg)
  }
  
  public static final class BlindedCoinMsg extends
      com.google.protobuf.GeneratedMessage {
    // Use BlindedCoinMsg.newBuilder() to construct.
    private BlindedCoinMsg() {
      initFields();
    }
    private BlindedCoinMsg(boolean noInit) {}
    
    private static final BlindedCoinMsg defaultInstance;
    public static BlindedCoinMsg getDefaultInstance() {
      return defaultInstance;
    }
    
    public BlindedCoinMsg getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.robonobo.wang.proto.WangProtocol.internal_static_wang_BlindedCoinMsg_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.robonobo.wang.proto.WangProtocol.internal_static_wang_BlindedCoinMsg_fieldAccessorTable;
    }
    
    // required sint32 denom = 1;
    public static final int DENOM_FIELD_NUMBER = 1;
    private boolean hasDenom;
    private int denom_ = 0;
    public boolean hasDenom() { return hasDenom; }
    public int getDenom() { return denom_; }
    
    // required string blinded_signature = 2;
    public static final int BLINDED_SIGNATURE_FIELD_NUMBER = 2;
    private boolean hasBlindedSignature;
    private java.lang.String blindedSignature_ = "";
    public boolean hasBlindedSignature() { return hasBlindedSignature; }
    public java.lang.String getBlindedSignature() { return blindedSignature_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasDenom) return false;
      if (!hasBlindedSignature) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasDenom()) {
        output.writeSInt32(1, getDenom());
      }
      if (hasBlindedSignature()) {
        output.writeString(2, getBlindedSignature());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasDenom()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, getDenom());
      }
      if (hasBlindedSignature()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getBlindedSignature());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg result;
      
      // Construct using com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg();
        return builder;
      }
      
      protected com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg.getDescriptor();
      }
      
      public com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg getDefaultInstanceForType() {
        return com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg) {
          return mergeFrom((com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg other) {
        if (other == com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg.getDefaultInstance()) return this;
        if (other.hasDenom()) {
          setDenom(other.getDenom());
        }
        if (other.hasBlindedSignature()) {
          setBlindedSignature(other.getBlindedSignature());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setDenom(input.readSInt32());
              break;
            }
            case 18: {
              setBlindedSignature(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required sint32 denom = 1;
      public boolean hasDenom() {
        return result.hasDenom();
      }
      public int getDenom() {
        return result.getDenom();
      }
      public Builder setDenom(int value) {
        result.hasDenom = true;
        result.denom_ = value;
        return this;
      }
      public Builder clearDenom() {
        result.hasDenom = false;
        result.denom_ = 0;
        return this;
      }
      
      // required string blinded_signature = 2;
      public boolean hasBlindedSignature() {
        return result.hasBlindedSignature();
      }
      public java.lang.String getBlindedSignature() {
        return result.getBlindedSignature();
      }
      public Builder setBlindedSignature(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasBlindedSignature = true;
        result.blindedSignature_ = value;
        return this;
      }
      public Builder clearBlindedSignature() {
        result.hasBlindedSignature = false;
        result.blindedSignature_ = getDefaultInstance().getBlindedSignature();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:wang.BlindedCoinMsg)
    }
    
    static {
      defaultInstance = new BlindedCoinMsg(true);
      com.robonobo.wang.proto.WangProtocol.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:wang.BlindedCoinMsg)
  }
  
  public static final class BlindedCoinListMsg extends
      com.google.protobuf.GeneratedMessage {
    // Use BlindedCoinListMsg.newBuilder() to construct.
    private BlindedCoinListMsg() {
      initFields();
    }
    private BlindedCoinListMsg(boolean noInit) {}
    
    private static final BlindedCoinListMsg defaultInstance;
    public static BlindedCoinListMsg getDefaultInstance() {
      return defaultInstance;
    }
    
    public BlindedCoinListMsg getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.robonobo.wang.proto.WangProtocol.internal_static_wang_BlindedCoinListMsg_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.robonobo.wang.proto.WangProtocol.internal_static_wang_BlindedCoinListMsg_fieldAccessorTable;
    }
    
    public enum Status
        implements com.google.protobuf.ProtocolMessageEnum {
      OK(0, 1),
      Error(1, 2),
      InsufficientWang(2, 3),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static Status valueOf(int value) {
        switch (value) {
          case 1: return OK;
          case 2: return Error;
          case 3: return InsufficientWang;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<Status>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Status>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Status>() {
              public Status findValueByNumber(int number) {
                return Status.valueOf(number)
      ;        }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.robonobo.wang.proto.WangProtocol.BlindedCoinListMsg.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final Status[] VALUES = {
        OK, Error, InsufficientWang, 
      };
      public static Status valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      private final int index;
      private final int value;
      private Status(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      static {
        com.robonobo.wang.proto.WangProtocol.getDescriptor();
      }
      
      // @@protoc_insertion_point(enum_scope:wang.BlindedCoinListMsg.Status)
    }
    
    // required .wang.BlindedCoinListMsg.Status status = 1;
    public static final int STATUS_FIELD_NUMBER = 1;
    private boolean hasStatus;
    private com.robonobo.wang.proto.WangProtocol.BlindedCoinListMsg.Status status_;
    public boolean hasStatus() { return hasStatus; }
    public com.robonobo.wang.proto.WangProtocol.BlindedCoinListMsg.Status getStatus() { return status_; }
    
    // repeated .wang.BlindedCoinMsg coin = 2;
    public static final int COIN_FIELD_NUMBER = 2;
    private java.util.List<com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg> coin_ =
      java.util.Collections.emptyList();
    public java.util.List<com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg> getCoinList() {
      return coin_;
    }
    public int getCoinCount() { return coin_.size(); }
    public com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg getCoin(int index) {
      return coin_.get(index);
    }
    
    private void initFields() {
      status_ = com.robonobo.wang.proto.WangProtocol.BlindedCoinListMsg.Status.OK;
    }
    public final boolean isInitialized() {
      if (!hasStatus) return false;
      for (com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg element : getCoinList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasStatus()) {
        output.writeEnum(1, getStatus().getNumber());
      }
      for (com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg element : getCoinList()) {
        output.writeMessage(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasStatus()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, getStatus().getNumber());
      }
      for (com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg element : getCoinList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.robonobo.wang.proto.WangProtocol.BlindedCoinListMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.BlindedCoinListMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.BlindedCoinListMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.BlindedCoinListMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.BlindedCoinListMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.BlindedCoinListMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.BlindedCoinListMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.wang.proto.WangProtocol.BlindedCoinListMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.wang.proto.WangProtocol.BlindedCoinListMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.BlindedCoinListMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.robonobo.wang.proto.WangProtocol.BlindedCoinListMsg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.robonobo.wang.proto.WangProtocol.BlindedCoinListMsg result;
      
      // Construct using com.robonobo.wang.proto.WangProtocol.BlindedCoinListMsg.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.robonobo.wang.proto.WangProtocol.BlindedCoinListMsg();
        return builder;
      }
      
      protected com.robonobo.wang.proto.WangProtocol.BlindedCoinListMsg internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.robonobo.wang.proto.WangProtocol.BlindedCoinListMsg();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.robonobo.wang.proto.WangProtocol.BlindedCoinListMsg.getDescriptor();
      }
      
      public com.robonobo.wang.proto.WangProtocol.BlindedCoinListMsg getDefaultInstanceForType() {
        return com.robonobo.wang.proto.WangProtocol.BlindedCoinListMsg.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.robonobo.wang.proto.WangProtocol.BlindedCoinListMsg build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.robonobo.wang.proto.WangProtocol.BlindedCoinListMsg buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.robonobo.wang.proto.WangProtocol.BlindedCoinListMsg buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.coin_ != java.util.Collections.EMPTY_LIST) {
          result.coin_ =
            java.util.Collections.unmodifiableList(result.coin_);
        }
        com.robonobo.wang.proto.WangProtocol.BlindedCoinListMsg returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.robonobo.wang.proto.WangProtocol.BlindedCoinListMsg) {
          return mergeFrom((com.robonobo.wang.proto.WangProtocol.BlindedCoinListMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.robonobo.wang.proto.WangProtocol.BlindedCoinListMsg other) {
        if (other == com.robonobo.wang.proto.WangProtocol.BlindedCoinListMsg.getDefaultInstance()) return this;
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (!other.coin_.isEmpty()) {
          if (result.coin_.isEmpty()) {
            result.coin_ = new java.util.ArrayList<com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg>();
          }
          result.coin_.addAll(other.coin_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.robonobo.wang.proto.WangProtocol.BlindedCoinListMsg.Status value = com.robonobo.wang.proto.WangProtocol.BlindedCoinListMsg.Status.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                setStatus(value);
              }
              break;
            }
            case 18: {
              com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg.Builder subBuilder = com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addCoin(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .wang.BlindedCoinListMsg.Status status = 1;
      public boolean hasStatus() {
        return result.hasStatus();
      }
      public com.robonobo.wang.proto.WangProtocol.BlindedCoinListMsg.Status getStatus() {
        return result.getStatus();
      }
      public Builder setStatus(com.robonobo.wang.proto.WangProtocol.BlindedCoinListMsg.Status value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder clearStatus() {
        result.hasStatus = false;
        result.status_ = com.robonobo.wang.proto.WangProtocol.BlindedCoinListMsg.Status.OK;
        return this;
      }
      
      // repeated .wang.BlindedCoinMsg coin = 2;
      public java.util.List<com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg> getCoinList() {
        return java.util.Collections.unmodifiableList(result.coin_);
      }
      public int getCoinCount() {
        return result.getCoinCount();
      }
      public com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg getCoin(int index) {
        return result.getCoin(index);
      }
      public Builder setCoin(int index, com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.coin_.set(index, value);
        return this;
      }
      public Builder setCoin(int index, com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg.Builder builderForValue) {
        result.coin_.set(index, builderForValue.build());
        return this;
      }
      public Builder addCoin(com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.coin_.isEmpty()) {
          result.coin_ = new java.util.ArrayList<com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg>();
        }
        result.coin_.add(value);
        return this;
      }
      public Builder addCoin(com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg.Builder builderForValue) {
        if (result.coin_.isEmpty()) {
          result.coin_ = new java.util.ArrayList<com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg>();
        }
        result.coin_.add(builderForValue.build());
        return this;
      }
      public Builder addAllCoin(
          java.lang.Iterable<? extends com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg> values) {
        if (result.coin_.isEmpty()) {
          result.coin_ = new java.util.ArrayList<com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg>();
        }
        super.addAll(values, result.coin_);
        return this;
      }
      public Builder clearCoin() {
        result.coin_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:wang.BlindedCoinListMsg)
    }
    
    static {
      defaultInstance = new BlindedCoinListMsg(true);
      com.robonobo.wang.proto.WangProtocol.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:wang.BlindedCoinListMsg)
  }
  
  public static final class CoinMsg extends
      com.google.protobuf.GeneratedMessage {
    // Use CoinMsg.newBuilder() to construct.
    private CoinMsg() {
      initFields();
    }
    private CoinMsg(boolean noInit) {}
    
    private static final CoinMsg defaultInstance;
    public static CoinMsg getDefaultInstance() {
      return defaultInstance;
    }
    
    public CoinMsg getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.robonobo.wang.proto.WangProtocol.internal_static_wang_CoinMsg_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.robonobo.wang.proto.WangProtocol.internal_static_wang_CoinMsg_fieldAccessorTable;
    }
    
    // required sint32 denom = 1;
    public static final int DENOM_FIELD_NUMBER = 1;
    private boolean hasDenom;
    private int denom_ = 0;
    public boolean hasDenom() { return hasDenom; }
    public int getDenom() { return denom_; }
    
    // required string coin_id = 2;
    public static final int COIN_ID_FIELD_NUMBER = 2;
    private boolean hasCoinId;
    private java.lang.String coinId_ = "";
    public boolean hasCoinId() { return hasCoinId; }
    public java.lang.String getCoinId() { return coinId_; }
    
    // required string signature = 3;
    public static final int SIGNATURE_FIELD_NUMBER = 3;
    private boolean hasSignature;
    private java.lang.String signature_ = "";
    public boolean hasSignature() { return hasSignature; }
    public java.lang.String getSignature() { return signature_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasDenom) return false;
      if (!hasCoinId) return false;
      if (!hasSignature) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasDenom()) {
        output.writeSInt32(1, getDenom());
      }
      if (hasCoinId()) {
        output.writeString(2, getCoinId());
      }
      if (hasSignature()) {
        output.writeString(3, getSignature());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasDenom()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, getDenom());
      }
      if (hasCoinId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getCoinId());
      }
      if (hasSignature()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getSignature());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.robonobo.wang.proto.WangProtocol.CoinMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.CoinMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.CoinMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.CoinMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.CoinMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.CoinMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.CoinMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.wang.proto.WangProtocol.CoinMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.wang.proto.WangProtocol.CoinMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.CoinMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.robonobo.wang.proto.WangProtocol.CoinMsg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.robonobo.wang.proto.WangProtocol.CoinMsg result;
      
      // Construct using com.robonobo.wang.proto.WangProtocol.CoinMsg.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.robonobo.wang.proto.WangProtocol.CoinMsg();
        return builder;
      }
      
      protected com.robonobo.wang.proto.WangProtocol.CoinMsg internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.robonobo.wang.proto.WangProtocol.CoinMsg();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.robonobo.wang.proto.WangProtocol.CoinMsg.getDescriptor();
      }
      
      public com.robonobo.wang.proto.WangProtocol.CoinMsg getDefaultInstanceForType() {
        return com.robonobo.wang.proto.WangProtocol.CoinMsg.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.robonobo.wang.proto.WangProtocol.CoinMsg build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.robonobo.wang.proto.WangProtocol.CoinMsg buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.robonobo.wang.proto.WangProtocol.CoinMsg buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.robonobo.wang.proto.WangProtocol.CoinMsg returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.robonobo.wang.proto.WangProtocol.CoinMsg) {
          return mergeFrom((com.robonobo.wang.proto.WangProtocol.CoinMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.robonobo.wang.proto.WangProtocol.CoinMsg other) {
        if (other == com.robonobo.wang.proto.WangProtocol.CoinMsg.getDefaultInstance()) return this;
        if (other.hasDenom()) {
          setDenom(other.getDenom());
        }
        if (other.hasCoinId()) {
          setCoinId(other.getCoinId());
        }
        if (other.hasSignature()) {
          setSignature(other.getSignature());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setDenom(input.readSInt32());
              break;
            }
            case 18: {
              setCoinId(input.readString());
              break;
            }
            case 26: {
              setSignature(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required sint32 denom = 1;
      public boolean hasDenom() {
        return result.hasDenom();
      }
      public int getDenom() {
        return result.getDenom();
      }
      public Builder setDenom(int value) {
        result.hasDenom = true;
        result.denom_ = value;
        return this;
      }
      public Builder clearDenom() {
        result.hasDenom = false;
        result.denom_ = 0;
        return this;
      }
      
      // required string coin_id = 2;
      public boolean hasCoinId() {
        return result.hasCoinId();
      }
      public java.lang.String getCoinId() {
        return result.getCoinId();
      }
      public Builder setCoinId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasCoinId = true;
        result.coinId_ = value;
        return this;
      }
      public Builder clearCoinId() {
        result.hasCoinId = false;
        result.coinId_ = getDefaultInstance().getCoinId();
        return this;
      }
      
      // required string signature = 3;
      public boolean hasSignature() {
        return result.hasSignature();
      }
      public java.lang.String getSignature() {
        return result.getSignature();
      }
      public Builder setSignature(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasSignature = true;
        result.signature_ = value;
        return this;
      }
      public Builder clearSignature() {
        result.hasSignature = false;
        result.signature_ = getDefaultInstance().getSignature();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:wang.CoinMsg)
    }
    
    static {
      defaultInstance = new CoinMsg(true);
      com.robonobo.wang.proto.WangProtocol.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:wang.CoinMsg)
  }
  
  public static final class CoinListMsg extends
      com.google.protobuf.GeneratedMessage {
    // Use CoinListMsg.newBuilder() to construct.
    private CoinListMsg() {
      initFields();
    }
    private CoinListMsg(boolean noInit) {}
    
    private static final CoinListMsg defaultInstance;
    public static CoinListMsg getDefaultInstance() {
      return defaultInstance;
    }
    
    public CoinListMsg getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.robonobo.wang.proto.WangProtocol.internal_static_wang_CoinListMsg_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.robonobo.wang.proto.WangProtocol.internal_static_wang_CoinListMsg_fieldAccessorTable;
    }
    
    // repeated .wang.CoinMsg coin = 1;
    public static final int COIN_FIELD_NUMBER = 1;
    private java.util.List<com.robonobo.wang.proto.WangProtocol.CoinMsg> coin_ =
      java.util.Collections.emptyList();
    public java.util.List<com.robonobo.wang.proto.WangProtocol.CoinMsg> getCoinList() {
      return coin_;
    }
    public int getCoinCount() { return coin_.size(); }
    public com.robonobo.wang.proto.WangProtocol.CoinMsg getCoin(int index) {
      return coin_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (com.robonobo.wang.proto.WangProtocol.CoinMsg element : getCoinList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (com.robonobo.wang.proto.WangProtocol.CoinMsg element : getCoinList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (com.robonobo.wang.proto.WangProtocol.CoinMsg element : getCoinList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.robonobo.wang.proto.WangProtocol.CoinListMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.CoinListMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.CoinListMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.CoinListMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.CoinListMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.CoinListMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.CoinListMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.wang.proto.WangProtocol.CoinListMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.wang.proto.WangProtocol.CoinListMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.CoinListMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.robonobo.wang.proto.WangProtocol.CoinListMsg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.robonobo.wang.proto.WangProtocol.CoinListMsg result;
      
      // Construct using com.robonobo.wang.proto.WangProtocol.CoinListMsg.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.robonobo.wang.proto.WangProtocol.CoinListMsg();
        return builder;
      }
      
      protected com.robonobo.wang.proto.WangProtocol.CoinListMsg internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.robonobo.wang.proto.WangProtocol.CoinListMsg();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.robonobo.wang.proto.WangProtocol.CoinListMsg.getDescriptor();
      }
      
      public com.robonobo.wang.proto.WangProtocol.CoinListMsg getDefaultInstanceForType() {
        return com.robonobo.wang.proto.WangProtocol.CoinListMsg.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.robonobo.wang.proto.WangProtocol.CoinListMsg build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.robonobo.wang.proto.WangProtocol.CoinListMsg buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.robonobo.wang.proto.WangProtocol.CoinListMsg buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.coin_ != java.util.Collections.EMPTY_LIST) {
          result.coin_ =
            java.util.Collections.unmodifiableList(result.coin_);
        }
        com.robonobo.wang.proto.WangProtocol.CoinListMsg returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.robonobo.wang.proto.WangProtocol.CoinListMsg) {
          return mergeFrom((com.robonobo.wang.proto.WangProtocol.CoinListMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.robonobo.wang.proto.WangProtocol.CoinListMsg other) {
        if (other == com.robonobo.wang.proto.WangProtocol.CoinListMsg.getDefaultInstance()) return this;
        if (!other.coin_.isEmpty()) {
          if (result.coin_.isEmpty()) {
            result.coin_ = new java.util.ArrayList<com.robonobo.wang.proto.WangProtocol.CoinMsg>();
          }
          result.coin_.addAll(other.coin_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.robonobo.wang.proto.WangProtocol.CoinMsg.Builder subBuilder = com.robonobo.wang.proto.WangProtocol.CoinMsg.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addCoin(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .wang.CoinMsg coin = 1;
      public java.util.List<com.robonobo.wang.proto.WangProtocol.CoinMsg> getCoinList() {
        return java.util.Collections.unmodifiableList(result.coin_);
      }
      public int getCoinCount() {
        return result.getCoinCount();
      }
      public com.robonobo.wang.proto.WangProtocol.CoinMsg getCoin(int index) {
        return result.getCoin(index);
      }
      public Builder setCoin(int index, com.robonobo.wang.proto.WangProtocol.CoinMsg value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.coin_.set(index, value);
        return this;
      }
      public Builder setCoin(int index, com.robonobo.wang.proto.WangProtocol.CoinMsg.Builder builderForValue) {
        result.coin_.set(index, builderForValue.build());
        return this;
      }
      public Builder addCoin(com.robonobo.wang.proto.WangProtocol.CoinMsg value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.coin_.isEmpty()) {
          result.coin_ = new java.util.ArrayList<com.robonobo.wang.proto.WangProtocol.CoinMsg>();
        }
        result.coin_.add(value);
        return this;
      }
      public Builder addCoin(com.robonobo.wang.proto.WangProtocol.CoinMsg.Builder builderForValue) {
        if (result.coin_.isEmpty()) {
          result.coin_ = new java.util.ArrayList<com.robonobo.wang.proto.WangProtocol.CoinMsg>();
        }
        result.coin_.add(builderForValue.build());
        return this;
      }
      public Builder addAllCoin(
          java.lang.Iterable<? extends com.robonobo.wang.proto.WangProtocol.CoinMsg> values) {
        if (result.coin_.isEmpty()) {
          result.coin_ = new java.util.ArrayList<com.robonobo.wang.proto.WangProtocol.CoinMsg>();
        }
        super.addAll(values, result.coin_);
        return this;
      }
      public Builder clearCoin() {
        result.coin_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:wang.CoinListMsg)
    }
    
    static {
      defaultInstance = new CoinListMsg(true);
      com.robonobo.wang.proto.WangProtocol.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:wang.CoinListMsg)
  }
  
  public static final class CoinRequestMsg extends
      com.google.protobuf.GeneratedMessage {
    // Use CoinRequestMsg.newBuilder() to construct.
    private CoinRequestMsg() {
      initFields();
    }
    private CoinRequestMsg(boolean noInit) {}
    
    private static final CoinRequestMsg defaultInstance;
    public static CoinRequestMsg getDefaultInstance() {
      return defaultInstance;
    }
    
    public CoinRequestMsg getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.robonobo.wang.proto.WangProtocol.internal_static_wang_CoinRequestMsg_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.robonobo.wang.proto.WangProtocol.internal_static_wang_CoinRequestMsg_fieldAccessorTable;
    }
    
    // required sint32 denom = 1;
    public static final int DENOM_FIELD_NUMBER = 1;
    private boolean hasDenom;
    private int denom_ = 0;
    public boolean hasDenom() { return hasDenom; }
    public int getDenom() { return denom_; }
    
    // required string request = 2;
    public static final int REQUEST_FIELD_NUMBER = 2;
    private boolean hasRequest;
    private java.lang.String request_ = "";
    public boolean hasRequest() { return hasRequest; }
    public java.lang.String getRequest() { return request_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasDenom) return false;
      if (!hasRequest) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasDenom()) {
        output.writeSInt32(1, getDenom());
      }
      if (hasRequest()) {
        output.writeString(2, getRequest());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasDenom()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, getDenom());
      }
      if (hasRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getRequest());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.robonobo.wang.proto.WangProtocol.CoinRequestMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.CoinRequestMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.CoinRequestMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.CoinRequestMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.CoinRequestMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.CoinRequestMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.CoinRequestMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.wang.proto.WangProtocol.CoinRequestMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.wang.proto.WangProtocol.CoinRequestMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.CoinRequestMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.robonobo.wang.proto.WangProtocol.CoinRequestMsg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.robonobo.wang.proto.WangProtocol.CoinRequestMsg result;
      
      // Construct using com.robonobo.wang.proto.WangProtocol.CoinRequestMsg.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.robonobo.wang.proto.WangProtocol.CoinRequestMsg();
        return builder;
      }
      
      protected com.robonobo.wang.proto.WangProtocol.CoinRequestMsg internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.robonobo.wang.proto.WangProtocol.CoinRequestMsg();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.robonobo.wang.proto.WangProtocol.CoinRequestMsg.getDescriptor();
      }
      
      public com.robonobo.wang.proto.WangProtocol.CoinRequestMsg getDefaultInstanceForType() {
        return com.robonobo.wang.proto.WangProtocol.CoinRequestMsg.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.robonobo.wang.proto.WangProtocol.CoinRequestMsg build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.robonobo.wang.proto.WangProtocol.CoinRequestMsg buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.robonobo.wang.proto.WangProtocol.CoinRequestMsg buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.robonobo.wang.proto.WangProtocol.CoinRequestMsg returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.robonobo.wang.proto.WangProtocol.CoinRequestMsg) {
          return mergeFrom((com.robonobo.wang.proto.WangProtocol.CoinRequestMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.robonobo.wang.proto.WangProtocol.CoinRequestMsg other) {
        if (other == com.robonobo.wang.proto.WangProtocol.CoinRequestMsg.getDefaultInstance()) return this;
        if (other.hasDenom()) {
          setDenom(other.getDenom());
        }
        if (other.hasRequest()) {
          setRequest(other.getRequest());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setDenom(input.readSInt32());
              break;
            }
            case 18: {
              setRequest(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required sint32 denom = 1;
      public boolean hasDenom() {
        return result.hasDenom();
      }
      public int getDenom() {
        return result.getDenom();
      }
      public Builder setDenom(int value) {
        result.hasDenom = true;
        result.denom_ = value;
        return this;
      }
      public Builder clearDenom() {
        result.hasDenom = false;
        result.denom_ = 0;
        return this;
      }
      
      // required string request = 2;
      public boolean hasRequest() {
        return result.hasRequest();
      }
      public java.lang.String getRequest() {
        return result.getRequest();
      }
      public Builder setRequest(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasRequest = true;
        result.request_ = value;
        return this;
      }
      public Builder clearRequest() {
        result.hasRequest = false;
        result.request_ = getDefaultInstance().getRequest();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:wang.CoinRequestMsg)
    }
    
    static {
      defaultInstance = new CoinRequestMsg(true);
      com.robonobo.wang.proto.WangProtocol.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:wang.CoinRequestMsg)
  }
  
  public static final class CoinRequestListMsg extends
      com.google.protobuf.GeneratedMessage {
    // Use CoinRequestListMsg.newBuilder() to construct.
    private CoinRequestListMsg() {
      initFields();
    }
    private CoinRequestListMsg(boolean noInit) {}
    
    private static final CoinRequestListMsg defaultInstance;
    public static CoinRequestListMsg getDefaultInstance() {
      return defaultInstance;
    }
    
    public CoinRequestListMsg getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.robonobo.wang.proto.WangProtocol.internal_static_wang_CoinRequestListMsg_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.robonobo.wang.proto.WangProtocol.internal_static_wang_CoinRequestListMsg_fieldAccessorTable;
    }
    
    // repeated .wang.CoinRequestMsg coin_request = 1;
    public static final int COIN_REQUEST_FIELD_NUMBER = 1;
    private java.util.List<com.robonobo.wang.proto.WangProtocol.CoinRequestMsg> coinRequest_ =
      java.util.Collections.emptyList();
    public java.util.List<com.robonobo.wang.proto.WangProtocol.CoinRequestMsg> getCoinRequestList() {
      return coinRequest_;
    }
    public int getCoinRequestCount() { return coinRequest_.size(); }
    public com.robonobo.wang.proto.WangProtocol.CoinRequestMsg getCoinRequest(int index) {
      return coinRequest_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (com.robonobo.wang.proto.WangProtocol.CoinRequestMsg element : getCoinRequestList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (com.robonobo.wang.proto.WangProtocol.CoinRequestMsg element : getCoinRequestList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (com.robonobo.wang.proto.WangProtocol.CoinRequestMsg element : getCoinRequestList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.robonobo.wang.proto.WangProtocol.CoinRequestListMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.CoinRequestListMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.CoinRequestListMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.CoinRequestListMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.CoinRequestListMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.CoinRequestListMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.CoinRequestListMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.wang.proto.WangProtocol.CoinRequestListMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.wang.proto.WangProtocol.CoinRequestListMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.CoinRequestListMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.robonobo.wang.proto.WangProtocol.CoinRequestListMsg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.robonobo.wang.proto.WangProtocol.CoinRequestListMsg result;
      
      // Construct using com.robonobo.wang.proto.WangProtocol.CoinRequestListMsg.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.robonobo.wang.proto.WangProtocol.CoinRequestListMsg();
        return builder;
      }
      
      protected com.robonobo.wang.proto.WangProtocol.CoinRequestListMsg internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.robonobo.wang.proto.WangProtocol.CoinRequestListMsg();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.robonobo.wang.proto.WangProtocol.CoinRequestListMsg.getDescriptor();
      }
      
      public com.robonobo.wang.proto.WangProtocol.CoinRequestListMsg getDefaultInstanceForType() {
        return com.robonobo.wang.proto.WangProtocol.CoinRequestListMsg.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.robonobo.wang.proto.WangProtocol.CoinRequestListMsg build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.robonobo.wang.proto.WangProtocol.CoinRequestListMsg buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.robonobo.wang.proto.WangProtocol.CoinRequestListMsg buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.coinRequest_ != java.util.Collections.EMPTY_LIST) {
          result.coinRequest_ =
            java.util.Collections.unmodifiableList(result.coinRequest_);
        }
        com.robonobo.wang.proto.WangProtocol.CoinRequestListMsg returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.robonobo.wang.proto.WangProtocol.CoinRequestListMsg) {
          return mergeFrom((com.robonobo.wang.proto.WangProtocol.CoinRequestListMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.robonobo.wang.proto.WangProtocol.CoinRequestListMsg other) {
        if (other == com.robonobo.wang.proto.WangProtocol.CoinRequestListMsg.getDefaultInstance()) return this;
        if (!other.coinRequest_.isEmpty()) {
          if (result.coinRequest_.isEmpty()) {
            result.coinRequest_ = new java.util.ArrayList<com.robonobo.wang.proto.WangProtocol.CoinRequestMsg>();
          }
          result.coinRequest_.addAll(other.coinRequest_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.robonobo.wang.proto.WangProtocol.CoinRequestMsg.Builder subBuilder = com.robonobo.wang.proto.WangProtocol.CoinRequestMsg.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addCoinRequest(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .wang.CoinRequestMsg coin_request = 1;
      public java.util.List<com.robonobo.wang.proto.WangProtocol.CoinRequestMsg> getCoinRequestList() {
        return java.util.Collections.unmodifiableList(result.coinRequest_);
      }
      public int getCoinRequestCount() {
        return result.getCoinRequestCount();
      }
      public com.robonobo.wang.proto.WangProtocol.CoinRequestMsg getCoinRequest(int index) {
        return result.getCoinRequest(index);
      }
      public Builder setCoinRequest(int index, com.robonobo.wang.proto.WangProtocol.CoinRequestMsg value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.coinRequest_.set(index, value);
        return this;
      }
      public Builder setCoinRequest(int index, com.robonobo.wang.proto.WangProtocol.CoinRequestMsg.Builder builderForValue) {
        result.coinRequest_.set(index, builderForValue.build());
        return this;
      }
      public Builder addCoinRequest(com.robonobo.wang.proto.WangProtocol.CoinRequestMsg value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.coinRequest_.isEmpty()) {
          result.coinRequest_ = new java.util.ArrayList<com.robonobo.wang.proto.WangProtocol.CoinRequestMsg>();
        }
        result.coinRequest_.add(value);
        return this;
      }
      public Builder addCoinRequest(com.robonobo.wang.proto.WangProtocol.CoinRequestMsg.Builder builderForValue) {
        if (result.coinRequest_.isEmpty()) {
          result.coinRequest_ = new java.util.ArrayList<com.robonobo.wang.proto.WangProtocol.CoinRequestMsg>();
        }
        result.coinRequest_.add(builderForValue.build());
        return this;
      }
      public Builder addAllCoinRequest(
          java.lang.Iterable<? extends com.robonobo.wang.proto.WangProtocol.CoinRequestMsg> values) {
        if (result.coinRequest_.isEmpty()) {
          result.coinRequest_ = new java.util.ArrayList<com.robonobo.wang.proto.WangProtocol.CoinRequestMsg>();
        }
        super.addAll(values, result.coinRequest_);
        return this;
      }
      public Builder clearCoinRequest() {
        result.coinRequest_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:wang.CoinRequestListMsg)
    }
    
    static {
      defaultInstance = new CoinRequestListMsg(true);
      com.robonobo.wang.proto.WangProtocol.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:wang.CoinRequestListMsg)
  }
  
  public static final class DenominationMsg extends
      com.google.protobuf.GeneratedMessage {
    // Use DenominationMsg.newBuilder() to construct.
    private DenominationMsg() {
      initFields();
    }
    private DenominationMsg(boolean noInit) {}
    
    private static final DenominationMsg defaultInstance;
    public static DenominationMsg getDefaultInstance() {
      return defaultInstance;
    }
    
    public DenominationMsg getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.robonobo.wang.proto.WangProtocol.internal_static_wang_DenominationMsg_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.robonobo.wang.proto.WangProtocol.internal_static_wang_DenominationMsg_fieldAccessorTable;
    }
    
    // required sint32 denom = 1;
    public static final int DENOM_FIELD_NUMBER = 1;
    private boolean hasDenom;
    private int denom_ = 0;
    public boolean hasDenom() { return hasDenom; }
    public int getDenom() { return denom_; }
    
    // required string generator = 2;
    public static final int GENERATOR_FIELD_NUMBER = 2;
    private boolean hasGenerator;
    private java.lang.String generator_ = "";
    public boolean hasGenerator() { return hasGenerator; }
    public java.lang.String getGenerator() { return generator_; }
    
    // required string prime = 3;
    public static final int PRIME_FIELD_NUMBER = 3;
    private boolean hasPrime;
    private java.lang.String prime_ = "";
    public boolean hasPrime() { return hasPrime; }
    public java.lang.String getPrime() { return prime_; }
    
    // required string public_key = 4;
    public static final int PUBLIC_KEY_FIELD_NUMBER = 4;
    private boolean hasPublicKey;
    private java.lang.String publicKey_ = "";
    public boolean hasPublicKey() { return hasPublicKey; }
    public java.lang.String getPublicKey() { return publicKey_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasDenom) return false;
      if (!hasGenerator) return false;
      if (!hasPrime) return false;
      if (!hasPublicKey) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasDenom()) {
        output.writeSInt32(1, getDenom());
      }
      if (hasGenerator()) {
        output.writeString(2, getGenerator());
      }
      if (hasPrime()) {
        output.writeString(3, getPrime());
      }
      if (hasPublicKey()) {
        output.writeString(4, getPublicKey());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasDenom()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, getDenom());
      }
      if (hasGenerator()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getGenerator());
      }
      if (hasPrime()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getPrime());
      }
      if (hasPublicKey()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getPublicKey());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.robonobo.wang.proto.WangProtocol.DenominationMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.DenominationMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.DenominationMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.DenominationMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.DenominationMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.DenominationMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.DenominationMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.wang.proto.WangProtocol.DenominationMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.wang.proto.WangProtocol.DenominationMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.DenominationMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.robonobo.wang.proto.WangProtocol.DenominationMsg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.robonobo.wang.proto.WangProtocol.DenominationMsg result;
      
      // Construct using com.robonobo.wang.proto.WangProtocol.DenominationMsg.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.robonobo.wang.proto.WangProtocol.DenominationMsg();
        return builder;
      }
      
      protected com.robonobo.wang.proto.WangProtocol.DenominationMsg internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.robonobo.wang.proto.WangProtocol.DenominationMsg();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.robonobo.wang.proto.WangProtocol.DenominationMsg.getDescriptor();
      }
      
      public com.robonobo.wang.proto.WangProtocol.DenominationMsg getDefaultInstanceForType() {
        return com.robonobo.wang.proto.WangProtocol.DenominationMsg.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.robonobo.wang.proto.WangProtocol.DenominationMsg build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.robonobo.wang.proto.WangProtocol.DenominationMsg buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.robonobo.wang.proto.WangProtocol.DenominationMsg buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.robonobo.wang.proto.WangProtocol.DenominationMsg returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.robonobo.wang.proto.WangProtocol.DenominationMsg) {
          return mergeFrom((com.robonobo.wang.proto.WangProtocol.DenominationMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.robonobo.wang.proto.WangProtocol.DenominationMsg other) {
        if (other == com.robonobo.wang.proto.WangProtocol.DenominationMsg.getDefaultInstance()) return this;
        if (other.hasDenom()) {
          setDenom(other.getDenom());
        }
        if (other.hasGenerator()) {
          setGenerator(other.getGenerator());
        }
        if (other.hasPrime()) {
          setPrime(other.getPrime());
        }
        if (other.hasPublicKey()) {
          setPublicKey(other.getPublicKey());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setDenom(input.readSInt32());
              break;
            }
            case 18: {
              setGenerator(input.readString());
              break;
            }
            case 26: {
              setPrime(input.readString());
              break;
            }
            case 34: {
              setPublicKey(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required sint32 denom = 1;
      public boolean hasDenom() {
        return result.hasDenom();
      }
      public int getDenom() {
        return result.getDenom();
      }
      public Builder setDenom(int value) {
        result.hasDenom = true;
        result.denom_ = value;
        return this;
      }
      public Builder clearDenom() {
        result.hasDenom = false;
        result.denom_ = 0;
        return this;
      }
      
      // required string generator = 2;
      public boolean hasGenerator() {
        return result.hasGenerator();
      }
      public java.lang.String getGenerator() {
        return result.getGenerator();
      }
      public Builder setGenerator(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasGenerator = true;
        result.generator_ = value;
        return this;
      }
      public Builder clearGenerator() {
        result.hasGenerator = false;
        result.generator_ = getDefaultInstance().getGenerator();
        return this;
      }
      
      // required string prime = 3;
      public boolean hasPrime() {
        return result.hasPrime();
      }
      public java.lang.String getPrime() {
        return result.getPrime();
      }
      public Builder setPrime(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPrime = true;
        result.prime_ = value;
        return this;
      }
      public Builder clearPrime() {
        result.hasPrime = false;
        result.prime_ = getDefaultInstance().getPrime();
        return this;
      }
      
      // required string public_key = 4;
      public boolean hasPublicKey() {
        return result.hasPublicKey();
      }
      public java.lang.String getPublicKey() {
        return result.getPublicKey();
      }
      public Builder setPublicKey(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPublicKey = true;
        result.publicKey_ = value;
        return this;
      }
      public Builder clearPublicKey() {
        result.hasPublicKey = false;
        result.publicKey_ = getDefaultInstance().getPublicKey();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:wang.DenominationMsg)
    }
    
    static {
      defaultInstance = new DenominationMsg(true);
      com.robonobo.wang.proto.WangProtocol.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:wang.DenominationMsg)
  }
  
  public static final class DenominationListMsg extends
      com.google.protobuf.GeneratedMessage {
    // Use DenominationListMsg.newBuilder() to construct.
    private DenominationListMsg() {
      initFields();
    }
    private DenominationListMsg(boolean noInit) {}
    
    private static final DenominationListMsg defaultInstance;
    public static DenominationListMsg getDefaultInstance() {
      return defaultInstance;
    }
    
    public DenominationListMsg getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.robonobo.wang.proto.WangProtocol.internal_static_wang_DenominationListMsg_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.robonobo.wang.proto.WangProtocol.internal_static_wang_DenominationListMsg_fieldAccessorTable;
    }
    
    // repeated .wang.DenominationMsg denomination = 1;
    public static final int DENOMINATION_FIELD_NUMBER = 1;
    private java.util.List<com.robonobo.wang.proto.WangProtocol.DenominationMsg> denomination_ =
      java.util.Collections.emptyList();
    public java.util.List<com.robonobo.wang.proto.WangProtocol.DenominationMsg> getDenominationList() {
      return denomination_;
    }
    public int getDenominationCount() { return denomination_.size(); }
    public com.robonobo.wang.proto.WangProtocol.DenominationMsg getDenomination(int index) {
      return denomination_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (com.robonobo.wang.proto.WangProtocol.DenominationMsg element : getDenominationList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (com.robonobo.wang.proto.WangProtocol.DenominationMsg element : getDenominationList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (com.robonobo.wang.proto.WangProtocol.DenominationMsg element : getDenominationList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.robonobo.wang.proto.WangProtocol.DenominationListMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.DenominationListMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.DenominationListMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.DenominationListMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.DenominationListMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.DenominationListMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.DenominationListMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.wang.proto.WangProtocol.DenominationListMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.wang.proto.WangProtocol.DenominationListMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.DenominationListMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.robonobo.wang.proto.WangProtocol.DenominationListMsg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.robonobo.wang.proto.WangProtocol.DenominationListMsg result;
      
      // Construct using com.robonobo.wang.proto.WangProtocol.DenominationListMsg.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.robonobo.wang.proto.WangProtocol.DenominationListMsg();
        return builder;
      }
      
      protected com.robonobo.wang.proto.WangProtocol.DenominationListMsg internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.robonobo.wang.proto.WangProtocol.DenominationListMsg();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.robonobo.wang.proto.WangProtocol.DenominationListMsg.getDescriptor();
      }
      
      public com.robonobo.wang.proto.WangProtocol.DenominationListMsg getDefaultInstanceForType() {
        return com.robonobo.wang.proto.WangProtocol.DenominationListMsg.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.robonobo.wang.proto.WangProtocol.DenominationListMsg build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.robonobo.wang.proto.WangProtocol.DenominationListMsg buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.robonobo.wang.proto.WangProtocol.DenominationListMsg buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.denomination_ != java.util.Collections.EMPTY_LIST) {
          result.denomination_ =
            java.util.Collections.unmodifiableList(result.denomination_);
        }
        com.robonobo.wang.proto.WangProtocol.DenominationListMsg returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.robonobo.wang.proto.WangProtocol.DenominationListMsg) {
          return mergeFrom((com.robonobo.wang.proto.WangProtocol.DenominationListMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.robonobo.wang.proto.WangProtocol.DenominationListMsg other) {
        if (other == com.robonobo.wang.proto.WangProtocol.DenominationListMsg.getDefaultInstance()) return this;
        if (!other.denomination_.isEmpty()) {
          if (result.denomination_.isEmpty()) {
            result.denomination_ = new java.util.ArrayList<com.robonobo.wang.proto.WangProtocol.DenominationMsg>();
          }
          result.denomination_.addAll(other.denomination_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.robonobo.wang.proto.WangProtocol.DenominationMsg.Builder subBuilder = com.robonobo.wang.proto.WangProtocol.DenominationMsg.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addDenomination(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .wang.DenominationMsg denomination = 1;
      public java.util.List<com.robonobo.wang.proto.WangProtocol.DenominationMsg> getDenominationList() {
        return java.util.Collections.unmodifiableList(result.denomination_);
      }
      public int getDenominationCount() {
        return result.getDenominationCount();
      }
      public com.robonobo.wang.proto.WangProtocol.DenominationMsg getDenomination(int index) {
        return result.getDenomination(index);
      }
      public Builder setDenomination(int index, com.robonobo.wang.proto.WangProtocol.DenominationMsg value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.denomination_.set(index, value);
        return this;
      }
      public Builder setDenomination(int index, com.robonobo.wang.proto.WangProtocol.DenominationMsg.Builder builderForValue) {
        result.denomination_.set(index, builderForValue.build());
        return this;
      }
      public Builder addDenomination(com.robonobo.wang.proto.WangProtocol.DenominationMsg value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.denomination_.isEmpty()) {
          result.denomination_ = new java.util.ArrayList<com.robonobo.wang.proto.WangProtocol.DenominationMsg>();
        }
        result.denomination_.add(value);
        return this;
      }
      public Builder addDenomination(com.robonobo.wang.proto.WangProtocol.DenominationMsg.Builder builderForValue) {
        if (result.denomination_.isEmpty()) {
          result.denomination_ = new java.util.ArrayList<com.robonobo.wang.proto.WangProtocol.DenominationMsg>();
        }
        result.denomination_.add(builderForValue.build());
        return this;
      }
      public Builder addAllDenomination(
          java.lang.Iterable<? extends com.robonobo.wang.proto.WangProtocol.DenominationMsg> values) {
        if (result.denomination_.isEmpty()) {
          result.denomination_ = new java.util.ArrayList<com.robonobo.wang.proto.WangProtocol.DenominationMsg>();
        }
        super.addAll(values, result.denomination_);
        return this;
      }
      public Builder clearDenomination() {
        result.denomination_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:wang.DenominationListMsg)
    }
    
    static {
      defaultInstance = new DenominationListMsg(true);
      com.robonobo.wang.proto.WangProtocol.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:wang.DenominationListMsg)
  }
  
  public static final class DepositStatusMsg extends
      com.google.protobuf.GeneratedMessage {
    // Use DepositStatusMsg.newBuilder() to construct.
    private DepositStatusMsg() {
      initFields();
    }
    private DepositStatusMsg(boolean noInit) {}
    
    private static final DepositStatusMsg defaultInstance;
    public static DepositStatusMsg getDefaultInstance() {
      return defaultInstance;
    }
    
    public DepositStatusMsg getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.robonobo.wang.proto.WangProtocol.internal_static_wang_DepositStatusMsg_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.robonobo.wang.proto.WangProtocol.internal_static_wang_DepositStatusMsg_fieldAccessorTable;
    }
    
    public enum Status
        implements com.google.protobuf.ProtocolMessageEnum {
      OK(0, 1),
      Error(1, 2),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static Status valueOf(int value) {
        switch (value) {
          case 1: return OK;
          case 2: return Error;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<Status>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Status>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Status>() {
              public Status findValueByNumber(int number) {
                return Status.valueOf(number)
      ;        }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.robonobo.wang.proto.WangProtocol.DepositStatusMsg.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final Status[] VALUES = {
        OK, Error, 
      };
      public static Status valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      private final int index;
      private final int value;
      private Status(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      static {
        com.robonobo.wang.proto.WangProtocol.getDescriptor();
      }
      
      // @@protoc_insertion_point(enum_scope:wang.DepositStatusMsg.Status)
    }
    
    // required .wang.DepositStatusMsg.Status status = 1;
    public static final int STATUS_FIELD_NUMBER = 1;
    private boolean hasStatus;
    private com.robonobo.wang.proto.WangProtocol.DepositStatusMsg.Status status_;
    public boolean hasStatus() { return hasStatus; }
    public com.robonobo.wang.proto.WangProtocol.DepositStatusMsg.Status getStatus() { return status_; }
    
    // repeated string bad_coin_id = 2;
    public static final int BAD_COIN_ID_FIELD_NUMBER = 2;
    private java.util.List<java.lang.String> badCoinId_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getBadCoinIdList() {
      return badCoinId_;
    }
    public int getBadCoinIdCount() { return badCoinId_.size(); }
    public java.lang.String getBadCoinId(int index) {
      return badCoinId_.get(index);
    }
    
    private void initFields() {
      status_ = com.robonobo.wang.proto.WangProtocol.DepositStatusMsg.Status.OK;
    }
    public final boolean isInitialized() {
      if (!hasStatus) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasStatus()) {
        output.writeEnum(1, getStatus().getNumber());
      }
      for (java.lang.String element : getBadCoinIdList()) {
        output.writeString(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasStatus()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, getStatus().getNumber());
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getBadCoinIdList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getBadCoinIdList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.robonobo.wang.proto.WangProtocol.DepositStatusMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.DepositStatusMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.DepositStatusMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.DepositStatusMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.DepositStatusMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.DepositStatusMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.DepositStatusMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.wang.proto.WangProtocol.DepositStatusMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.wang.proto.WangProtocol.DepositStatusMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.wang.proto.WangProtocol.DepositStatusMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.robonobo.wang.proto.WangProtocol.DepositStatusMsg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.robonobo.wang.proto.WangProtocol.DepositStatusMsg result;
      
      // Construct using com.robonobo.wang.proto.WangProtocol.DepositStatusMsg.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.robonobo.wang.proto.WangProtocol.DepositStatusMsg();
        return builder;
      }
      
      protected com.robonobo.wang.proto.WangProtocol.DepositStatusMsg internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.robonobo.wang.proto.WangProtocol.DepositStatusMsg();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.robonobo.wang.proto.WangProtocol.DepositStatusMsg.getDescriptor();
      }
      
      public com.robonobo.wang.proto.WangProtocol.DepositStatusMsg getDefaultInstanceForType() {
        return com.robonobo.wang.proto.WangProtocol.DepositStatusMsg.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.robonobo.wang.proto.WangProtocol.DepositStatusMsg build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.robonobo.wang.proto.WangProtocol.DepositStatusMsg buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.robonobo.wang.proto.WangProtocol.DepositStatusMsg buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.badCoinId_ != java.util.Collections.EMPTY_LIST) {
          result.badCoinId_ =
            java.util.Collections.unmodifiableList(result.badCoinId_);
        }
        com.robonobo.wang.proto.WangProtocol.DepositStatusMsg returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.robonobo.wang.proto.WangProtocol.DepositStatusMsg) {
          return mergeFrom((com.robonobo.wang.proto.WangProtocol.DepositStatusMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.robonobo.wang.proto.WangProtocol.DepositStatusMsg other) {
        if (other == com.robonobo.wang.proto.WangProtocol.DepositStatusMsg.getDefaultInstance()) return this;
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (!other.badCoinId_.isEmpty()) {
          if (result.badCoinId_.isEmpty()) {
            result.badCoinId_ = new java.util.ArrayList<java.lang.String>();
          }
          result.badCoinId_.addAll(other.badCoinId_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.robonobo.wang.proto.WangProtocol.DepositStatusMsg.Status value = com.robonobo.wang.proto.WangProtocol.DepositStatusMsg.Status.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                setStatus(value);
              }
              break;
            }
            case 18: {
              addBadCoinId(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required .wang.DepositStatusMsg.Status status = 1;
      public boolean hasStatus() {
        return result.hasStatus();
      }
      public com.robonobo.wang.proto.WangProtocol.DepositStatusMsg.Status getStatus() {
        return result.getStatus();
      }
      public Builder setStatus(com.robonobo.wang.proto.WangProtocol.DepositStatusMsg.Status value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder clearStatus() {
        result.hasStatus = false;
        result.status_ = com.robonobo.wang.proto.WangProtocol.DepositStatusMsg.Status.OK;
        return this;
      }
      
      // repeated string bad_coin_id = 2;
      public java.util.List<java.lang.String> getBadCoinIdList() {
        return java.util.Collections.unmodifiableList(result.badCoinId_);
      }
      public int getBadCoinIdCount() {
        return result.getBadCoinIdCount();
      }
      public java.lang.String getBadCoinId(int index) {
        return result.getBadCoinId(index);
      }
      public Builder setBadCoinId(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.badCoinId_.set(index, value);
        return this;
      }
      public Builder addBadCoinId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.badCoinId_.isEmpty()) {
          result.badCoinId_ = new java.util.ArrayList<java.lang.String>();
        }
        result.badCoinId_.add(value);
        return this;
      }
      public Builder addAllBadCoinId(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.badCoinId_.isEmpty()) {
          result.badCoinId_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.badCoinId_);
        return this;
      }
      public Builder clearBadCoinId() {
        result.badCoinId_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:wang.DepositStatusMsg)
    }
    
    static {
      defaultInstance = new DepositStatusMsg(true);
      com.robonobo.wang.proto.WangProtocol.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:wang.DepositStatusMsg)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_wang_BalanceMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_wang_BalanceMsg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_wang_BlindedCoinMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_wang_BlindedCoinMsg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_wang_BlindedCoinListMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_wang_BlindedCoinListMsg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_wang_CoinMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_wang_CoinMsg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_wang_CoinListMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_wang_CoinListMsg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_wang_CoinRequestMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_wang_CoinRequestMsg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_wang_CoinRequestListMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_wang_CoinRequestListMsg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_wang_DenominationMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_wang_DenominationMsg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_wang_DenominationListMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_wang_DenominationListMsg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_wang_DepositStatusMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_wang_DepositStatusMsg_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n7wang-client/src/java/com/robonobo/wang" +
      "/proto/wang.proto\022\004wang\"\034\n\nBalanceMsg\022\016\n" +
      "\006amount\030\001 \002(\001\":\n\016BlindedCoinMsg\022\r\n\005denom" +
      "\030\001 \002(\021\022\031\n\021blinded_signature\030\002 \002(\t\"\234\001\n\022Bl" +
      "indedCoinListMsg\022/\n\006status\030\001 \002(\0162\037.wang." +
      "BlindedCoinListMsg.Status\022\"\n\004coin\030\002 \003(\0132" +
      "\024.wang.BlindedCoinMsg\"1\n\006Status\022\006\n\002OK\020\001\022" +
      "\t\n\005Error\020\002\022\024\n\020InsufficientWang\020\003\"<\n\007Coin" +
      "Msg\022\r\n\005denom\030\001 \002(\021\022\017\n\007coin_id\030\002 \002(\t\022\021\n\ts" +
      "ignature\030\003 \002(\t\"*\n\013CoinListMsg\022\033\n\004coin\030\001 ",
      "\003(\0132\r.wang.CoinMsg\"0\n\016CoinRequestMsg\022\r\n\005" +
      "denom\030\001 \002(\021\022\017\n\007request\030\002 \002(\t\"@\n\022CoinRequ" +
      "estListMsg\022*\n\014coin_request\030\001 \003(\0132\024.wang." +
      "CoinRequestMsg\"V\n\017DenominationMsg\022\r\n\005den" +
      "om\030\001 \002(\021\022\021\n\tgenerator\030\002 \002(\t\022\r\n\005prime\030\003 \002" +
      "(\t\022\022\n\npublic_key\030\004 \002(\t\"B\n\023DenominationLi" +
      "stMsg\022+\n\014denomination\030\001 \003(\0132\025.wang.Denom" +
      "inationMsg\"s\n\020DepositStatusMsg\022-\n\006status" +
      "\030\001 \002(\0162\035.wang.DepositStatusMsg.Status\022\023\n" +
      "\013bad_coin_id\030\002 \003(\t\"\033\n\006Status\022\006\n\002OK\020\001\022\t\n\005",
      "Error\020\002B\'\n\027com.robonobo.wang.protoB\014Wang" +
      "Protocol"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_wang_BalanceMsg_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_wang_BalanceMsg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_wang_BalanceMsg_descriptor,
              new java.lang.String[] { "Amount", },
              com.robonobo.wang.proto.WangProtocol.BalanceMsg.class,
              com.robonobo.wang.proto.WangProtocol.BalanceMsg.Builder.class);
          internal_static_wang_BlindedCoinMsg_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_wang_BlindedCoinMsg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_wang_BlindedCoinMsg_descriptor,
              new java.lang.String[] { "Denom", "BlindedSignature", },
              com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg.class,
              com.robonobo.wang.proto.WangProtocol.BlindedCoinMsg.Builder.class);
          internal_static_wang_BlindedCoinListMsg_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_wang_BlindedCoinListMsg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_wang_BlindedCoinListMsg_descriptor,
              new java.lang.String[] { "Status", "Coin", },
              com.robonobo.wang.proto.WangProtocol.BlindedCoinListMsg.class,
              com.robonobo.wang.proto.WangProtocol.BlindedCoinListMsg.Builder.class);
          internal_static_wang_CoinMsg_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_wang_CoinMsg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_wang_CoinMsg_descriptor,
              new java.lang.String[] { "Denom", "CoinId", "Signature", },
              com.robonobo.wang.proto.WangProtocol.CoinMsg.class,
              com.robonobo.wang.proto.WangProtocol.CoinMsg.Builder.class);
          internal_static_wang_CoinListMsg_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_wang_CoinListMsg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_wang_CoinListMsg_descriptor,
              new java.lang.String[] { "Coin", },
              com.robonobo.wang.proto.WangProtocol.CoinListMsg.class,
              com.robonobo.wang.proto.WangProtocol.CoinListMsg.Builder.class);
          internal_static_wang_CoinRequestMsg_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_wang_CoinRequestMsg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_wang_CoinRequestMsg_descriptor,
              new java.lang.String[] { "Denom", "Request", },
              com.robonobo.wang.proto.WangProtocol.CoinRequestMsg.class,
              com.robonobo.wang.proto.WangProtocol.CoinRequestMsg.Builder.class);
          internal_static_wang_CoinRequestListMsg_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_wang_CoinRequestListMsg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_wang_CoinRequestListMsg_descriptor,
              new java.lang.String[] { "CoinRequest", },
              com.robonobo.wang.proto.WangProtocol.CoinRequestListMsg.class,
              com.robonobo.wang.proto.WangProtocol.CoinRequestListMsg.Builder.class);
          internal_static_wang_DenominationMsg_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_wang_DenominationMsg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_wang_DenominationMsg_descriptor,
              new java.lang.String[] { "Denom", "Generator", "Prime", "PublicKey", },
              com.robonobo.wang.proto.WangProtocol.DenominationMsg.class,
              com.robonobo.wang.proto.WangProtocol.DenominationMsg.Builder.class);
          internal_static_wang_DenominationListMsg_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_wang_DenominationListMsg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_wang_DenominationListMsg_descriptor,
              new java.lang.String[] { "Denomination", },
              com.robonobo.wang.proto.WangProtocol.DenominationListMsg.class,
              com.robonobo.wang.proto.WangProtocol.DenominationListMsg.Builder.class);
          internal_static_wang_DepositStatusMsg_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_wang_DepositStatusMsg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_wang_DepositStatusMsg_descriptor,
              new java.lang.String[] { "Status", "BadCoinId", },
              com.robonobo.wang.proto.WangProtocol.DepositStatusMsg.class,
              com.robonobo.wang.proto.WangProtocol.DepositStatusMsg.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
