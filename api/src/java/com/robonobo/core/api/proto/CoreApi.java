// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/src/java/com/robonobo/core/api/proto/coreapi.proto

package com.robonobo.core.api.proto;

public final class CoreApi {
  private CoreApi() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class EndPoint extends
      com.google.protobuf.GeneratedMessage {
    // Use EndPoint.newBuilder() to construct.
    private EndPoint() {
      initFields();
    }
    private EndPoint(boolean noInit) {}
    
    private static final EndPoint defaultInstance;
    public static EndPoint getDefaultInstance() {
      return defaultInstance;
    }
    
    public EndPoint getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.robonobo.core.api.proto.CoreApi.internal_static_coreapi_EndPoint_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.robonobo.core.api.proto.CoreApi.internal_static_coreapi_EndPoint_fieldAccessorTable;
    }
    
    // required string url = 1;
    public static final int URL_FIELD_NUMBER = 1;
    private boolean hasUrl;
    private java.lang.String url_ = "";
    public boolean hasUrl() { return hasUrl; }
    public java.lang.String getUrl() { return url_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasUrl) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasUrl()) {
        output.writeString(1, getUrl());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasUrl()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getUrl());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.robonobo.core.api.proto.CoreApi.EndPoint parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.EndPoint parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.EndPoint parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.EndPoint parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.EndPoint parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.EndPoint parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.EndPoint parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.core.api.proto.CoreApi.EndPoint parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.core.api.proto.CoreApi.EndPoint parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.EndPoint parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.robonobo.core.api.proto.CoreApi.EndPoint prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.robonobo.core.api.proto.CoreApi.EndPoint result;
      
      // Construct using com.robonobo.core.api.proto.CoreApi.EndPoint.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.robonobo.core.api.proto.CoreApi.EndPoint();
        return builder;
      }
      
      protected com.robonobo.core.api.proto.CoreApi.EndPoint internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.robonobo.core.api.proto.CoreApi.EndPoint();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.robonobo.core.api.proto.CoreApi.EndPoint.getDescriptor();
      }
      
      public com.robonobo.core.api.proto.CoreApi.EndPoint getDefaultInstanceForType() {
        return com.robonobo.core.api.proto.CoreApi.EndPoint.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.robonobo.core.api.proto.CoreApi.EndPoint build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.robonobo.core.api.proto.CoreApi.EndPoint buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.robonobo.core.api.proto.CoreApi.EndPoint buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.robonobo.core.api.proto.CoreApi.EndPoint returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.robonobo.core.api.proto.CoreApi.EndPoint) {
          return mergeFrom((com.robonobo.core.api.proto.CoreApi.EndPoint)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.robonobo.core.api.proto.CoreApi.EndPoint other) {
        if (other == com.robonobo.core.api.proto.CoreApi.EndPoint.getDefaultInstance()) return this;
        if (other.hasUrl()) {
          setUrl(other.getUrl());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setUrl(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string url = 1;
      public boolean hasUrl() {
        return result.hasUrl();
      }
      public java.lang.String getUrl() {
        return result.getUrl();
      }
      public Builder setUrl(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasUrl = true;
        result.url_ = value;
        return this;
      }
      public Builder clearUrl() {
        result.hasUrl = false;
        result.url_ = getDefaultInstance().getUrl();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:coreapi.EndPoint)
    }
    
    static {
      defaultInstance = new EndPoint(true);
      com.robonobo.core.api.proto.CoreApi.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:coreapi.EndPoint)
  }
  
  public static final class Node extends
      com.google.protobuf.GeneratedMessage {
    // Use Node.newBuilder() to construct.
    private Node() {
      initFields();
    }
    private Node(boolean noInit) {}
    
    private static final Node defaultInstance;
    public static Node getDefaultInstance() {
      return defaultInstance;
    }
    
    public Node getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.robonobo.core.api.proto.CoreApi.internal_static_coreapi_Node_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.robonobo.core.api.proto.CoreApi.internal_static_coreapi_Node_fieldAccessorTable;
    }
    
    // required string id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private boolean hasId;
    private java.lang.String id_ = "";
    public boolean hasId() { return hasId; }
    public java.lang.String getId() { return id_; }
    
    // required string application_uri = 2;
    public static final int APPLICATION_URI_FIELD_NUMBER = 2;
    private boolean hasApplicationUri;
    private java.lang.String applicationUri_ = "";
    public boolean hasApplicationUri() { return hasApplicationUri; }
    public java.lang.String getApplicationUri() { return applicationUri_; }
    
    // required int32 protocol_version = 3;
    public static final int PROTOCOL_VERSION_FIELD_NUMBER = 3;
    private boolean hasProtocolVersion;
    private int protocolVersion_ = 0;
    public boolean hasProtocolVersion() { return hasProtocolVersion; }
    public int getProtocolVersion() { return protocolVersion_; }
    
    // optional bool supernode = 4;
    public static final int SUPERNODE_FIELD_NUMBER = 4;
    private boolean hasSupernode;
    private boolean supernode_ = false;
    public boolean hasSupernode() { return hasSupernode; }
    public boolean getSupernode() { return supernode_; }
    
    // optional bool local = 5;
    public static final int LOCAL_FIELD_NUMBER = 5;
    private boolean hasLocal;
    private boolean local_ = false;
    public boolean hasLocal() { return hasLocal; }
    public boolean getLocal() { return local_; }
    
    // repeated .coreapi.EndPoint end_point = 6;
    public static final int END_POINT_FIELD_NUMBER = 6;
    private java.util.List<com.robonobo.core.api.proto.CoreApi.EndPoint> endPoint_ =
      java.util.Collections.emptyList();
    public java.util.List<com.robonobo.core.api.proto.CoreApi.EndPoint> getEndPointList() {
      return endPoint_;
    }
    public int getEndPointCount() { return endPoint_.size(); }
    public com.robonobo.core.api.proto.CoreApi.EndPoint getEndPoint(int index) {
      return endPoint_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasId) return false;
      if (!hasApplicationUri) return false;
      if (!hasProtocolVersion) return false;
      for (com.robonobo.core.api.proto.CoreApi.EndPoint element : getEndPointList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasId()) {
        output.writeString(1, getId());
      }
      if (hasApplicationUri()) {
        output.writeString(2, getApplicationUri());
      }
      if (hasProtocolVersion()) {
        output.writeInt32(3, getProtocolVersion());
      }
      if (hasSupernode()) {
        output.writeBool(4, getSupernode());
      }
      if (hasLocal()) {
        output.writeBool(5, getLocal());
      }
      for (com.robonobo.core.api.proto.CoreApi.EndPoint element : getEndPointList()) {
        output.writeMessage(6, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getId());
      }
      if (hasApplicationUri()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getApplicationUri());
      }
      if (hasProtocolVersion()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getProtocolVersion());
      }
      if (hasSupernode()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, getSupernode());
      }
      if (hasLocal()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, getLocal());
      }
      for (com.robonobo.core.api.proto.CoreApi.EndPoint element : getEndPointList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.robonobo.core.api.proto.CoreApi.Node parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.Node parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.Node parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.Node parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.Node parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.Node parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.Node parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.core.api.proto.CoreApi.Node parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.core.api.proto.CoreApi.Node parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.Node parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.robonobo.core.api.proto.CoreApi.Node prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.robonobo.core.api.proto.CoreApi.Node result;
      
      // Construct using com.robonobo.core.api.proto.CoreApi.Node.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.robonobo.core.api.proto.CoreApi.Node();
        return builder;
      }
      
      protected com.robonobo.core.api.proto.CoreApi.Node internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.robonobo.core.api.proto.CoreApi.Node();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.robonobo.core.api.proto.CoreApi.Node.getDescriptor();
      }
      
      public com.robonobo.core.api.proto.CoreApi.Node getDefaultInstanceForType() {
        return com.robonobo.core.api.proto.CoreApi.Node.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.robonobo.core.api.proto.CoreApi.Node build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.robonobo.core.api.proto.CoreApi.Node buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.robonobo.core.api.proto.CoreApi.Node buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.endPoint_ != java.util.Collections.EMPTY_LIST) {
          result.endPoint_ =
            java.util.Collections.unmodifiableList(result.endPoint_);
        }
        com.robonobo.core.api.proto.CoreApi.Node returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.robonobo.core.api.proto.CoreApi.Node) {
          return mergeFrom((com.robonobo.core.api.proto.CoreApi.Node)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.robonobo.core.api.proto.CoreApi.Node other) {
        if (other == com.robonobo.core.api.proto.CoreApi.Node.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasApplicationUri()) {
          setApplicationUri(other.getApplicationUri());
        }
        if (other.hasProtocolVersion()) {
          setProtocolVersion(other.getProtocolVersion());
        }
        if (other.hasSupernode()) {
          setSupernode(other.getSupernode());
        }
        if (other.hasLocal()) {
          setLocal(other.getLocal());
        }
        if (!other.endPoint_.isEmpty()) {
          if (result.endPoint_.isEmpty()) {
            result.endPoint_ = new java.util.ArrayList<com.robonobo.core.api.proto.CoreApi.EndPoint>();
          }
          result.endPoint_.addAll(other.endPoint_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setId(input.readString());
              break;
            }
            case 18: {
              setApplicationUri(input.readString());
              break;
            }
            case 24: {
              setProtocolVersion(input.readInt32());
              break;
            }
            case 32: {
              setSupernode(input.readBool());
              break;
            }
            case 40: {
              setLocal(input.readBool());
              break;
            }
            case 50: {
              com.robonobo.core.api.proto.CoreApi.EndPoint.Builder subBuilder = com.robonobo.core.api.proto.CoreApi.EndPoint.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addEndPoint(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string id = 1;
      public boolean hasId() {
        return result.hasId();
      }
      public java.lang.String getId() {
        return result.getId();
      }
      public Builder setId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = getDefaultInstance().getId();
        return this;
      }
      
      // required string application_uri = 2;
      public boolean hasApplicationUri() {
        return result.hasApplicationUri();
      }
      public java.lang.String getApplicationUri() {
        return result.getApplicationUri();
      }
      public Builder setApplicationUri(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasApplicationUri = true;
        result.applicationUri_ = value;
        return this;
      }
      public Builder clearApplicationUri() {
        result.hasApplicationUri = false;
        result.applicationUri_ = getDefaultInstance().getApplicationUri();
        return this;
      }
      
      // required int32 protocol_version = 3;
      public boolean hasProtocolVersion() {
        return result.hasProtocolVersion();
      }
      public int getProtocolVersion() {
        return result.getProtocolVersion();
      }
      public Builder setProtocolVersion(int value) {
        result.hasProtocolVersion = true;
        result.protocolVersion_ = value;
        return this;
      }
      public Builder clearProtocolVersion() {
        result.hasProtocolVersion = false;
        result.protocolVersion_ = 0;
        return this;
      }
      
      // optional bool supernode = 4;
      public boolean hasSupernode() {
        return result.hasSupernode();
      }
      public boolean getSupernode() {
        return result.getSupernode();
      }
      public Builder setSupernode(boolean value) {
        result.hasSupernode = true;
        result.supernode_ = value;
        return this;
      }
      public Builder clearSupernode() {
        result.hasSupernode = false;
        result.supernode_ = false;
        return this;
      }
      
      // optional bool local = 5;
      public boolean hasLocal() {
        return result.hasLocal();
      }
      public boolean getLocal() {
        return result.getLocal();
      }
      public Builder setLocal(boolean value) {
        result.hasLocal = true;
        result.local_ = value;
        return this;
      }
      public Builder clearLocal() {
        result.hasLocal = false;
        result.local_ = false;
        return this;
      }
      
      // repeated .coreapi.EndPoint end_point = 6;
      public java.util.List<com.robonobo.core.api.proto.CoreApi.EndPoint> getEndPointList() {
        return java.util.Collections.unmodifiableList(result.endPoint_);
      }
      public int getEndPointCount() {
        return result.getEndPointCount();
      }
      public com.robonobo.core.api.proto.CoreApi.EndPoint getEndPoint(int index) {
        return result.getEndPoint(index);
      }
      public Builder setEndPoint(int index, com.robonobo.core.api.proto.CoreApi.EndPoint value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.endPoint_.set(index, value);
        return this;
      }
      public Builder setEndPoint(int index, com.robonobo.core.api.proto.CoreApi.EndPoint.Builder builderForValue) {
        result.endPoint_.set(index, builderForValue.build());
        return this;
      }
      public Builder addEndPoint(com.robonobo.core.api.proto.CoreApi.EndPoint value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.endPoint_.isEmpty()) {
          result.endPoint_ = new java.util.ArrayList<com.robonobo.core.api.proto.CoreApi.EndPoint>();
        }
        result.endPoint_.add(value);
        return this;
      }
      public Builder addEndPoint(com.robonobo.core.api.proto.CoreApi.EndPoint.Builder builderForValue) {
        if (result.endPoint_.isEmpty()) {
          result.endPoint_ = new java.util.ArrayList<com.robonobo.core.api.proto.CoreApi.EndPoint>();
        }
        result.endPoint_.add(builderForValue.build());
        return this;
      }
      public Builder addAllEndPoint(
          java.lang.Iterable<? extends com.robonobo.core.api.proto.CoreApi.EndPoint> values) {
        if (result.endPoint_.isEmpty()) {
          result.endPoint_ = new java.util.ArrayList<com.robonobo.core.api.proto.CoreApi.EndPoint>();
        }
        super.addAll(values, result.endPoint_);
        return this;
      }
      public Builder clearEndPoint() {
        result.endPoint_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:coreapi.Node)
    }
    
    static {
      defaultInstance = new Node(true);
      com.robonobo.core.api.proto.CoreApi.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:coreapi.Node)
  }
  
  public static final class NodeList extends
      com.google.protobuf.GeneratedMessage {
    // Use NodeList.newBuilder() to construct.
    private NodeList() {
      initFields();
    }
    private NodeList(boolean noInit) {}
    
    private static final NodeList defaultInstance;
    public static NodeList getDefaultInstance() {
      return defaultInstance;
    }
    
    public NodeList getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.robonobo.core.api.proto.CoreApi.internal_static_coreapi_NodeList_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.robonobo.core.api.proto.CoreApi.internal_static_coreapi_NodeList_fieldAccessorTable;
    }
    
    // repeated .coreapi.Node node = 1;
    public static final int NODE_FIELD_NUMBER = 1;
    private java.util.List<com.robonobo.core.api.proto.CoreApi.Node> node_ =
      java.util.Collections.emptyList();
    public java.util.List<com.robonobo.core.api.proto.CoreApi.Node> getNodeList() {
      return node_;
    }
    public int getNodeCount() { return node_.size(); }
    public com.robonobo.core.api.proto.CoreApi.Node getNode(int index) {
      return node_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (com.robonobo.core.api.proto.CoreApi.Node element : getNodeList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (com.robonobo.core.api.proto.CoreApi.Node element : getNodeList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (com.robonobo.core.api.proto.CoreApi.Node element : getNodeList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.robonobo.core.api.proto.CoreApi.NodeList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.NodeList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.NodeList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.NodeList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.NodeList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.NodeList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.NodeList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.core.api.proto.CoreApi.NodeList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.core.api.proto.CoreApi.NodeList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.NodeList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.robonobo.core.api.proto.CoreApi.NodeList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.robonobo.core.api.proto.CoreApi.NodeList result;
      
      // Construct using com.robonobo.core.api.proto.CoreApi.NodeList.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.robonobo.core.api.proto.CoreApi.NodeList();
        return builder;
      }
      
      protected com.robonobo.core.api.proto.CoreApi.NodeList internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.robonobo.core.api.proto.CoreApi.NodeList();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.robonobo.core.api.proto.CoreApi.NodeList.getDescriptor();
      }
      
      public com.robonobo.core.api.proto.CoreApi.NodeList getDefaultInstanceForType() {
        return com.robonobo.core.api.proto.CoreApi.NodeList.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.robonobo.core.api.proto.CoreApi.NodeList build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.robonobo.core.api.proto.CoreApi.NodeList buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.robonobo.core.api.proto.CoreApi.NodeList buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.node_ != java.util.Collections.EMPTY_LIST) {
          result.node_ =
            java.util.Collections.unmodifiableList(result.node_);
        }
        com.robonobo.core.api.proto.CoreApi.NodeList returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.robonobo.core.api.proto.CoreApi.NodeList) {
          return mergeFrom((com.robonobo.core.api.proto.CoreApi.NodeList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.robonobo.core.api.proto.CoreApi.NodeList other) {
        if (other == com.robonobo.core.api.proto.CoreApi.NodeList.getDefaultInstance()) return this;
        if (!other.node_.isEmpty()) {
          if (result.node_.isEmpty()) {
            result.node_ = new java.util.ArrayList<com.robonobo.core.api.proto.CoreApi.Node>();
          }
          result.node_.addAll(other.node_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.robonobo.core.api.proto.CoreApi.Node.Builder subBuilder = com.robonobo.core.api.proto.CoreApi.Node.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addNode(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .coreapi.Node node = 1;
      public java.util.List<com.robonobo.core.api.proto.CoreApi.Node> getNodeList() {
        return java.util.Collections.unmodifiableList(result.node_);
      }
      public int getNodeCount() {
        return result.getNodeCount();
      }
      public com.robonobo.core.api.proto.CoreApi.Node getNode(int index) {
        return result.getNode(index);
      }
      public Builder setNode(int index, com.robonobo.core.api.proto.CoreApi.Node value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.node_.set(index, value);
        return this;
      }
      public Builder setNode(int index, com.robonobo.core.api.proto.CoreApi.Node.Builder builderForValue) {
        result.node_.set(index, builderForValue.build());
        return this;
      }
      public Builder addNode(com.robonobo.core.api.proto.CoreApi.Node value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.node_.isEmpty()) {
          result.node_ = new java.util.ArrayList<com.robonobo.core.api.proto.CoreApi.Node>();
        }
        result.node_.add(value);
        return this;
      }
      public Builder addNode(com.robonobo.core.api.proto.CoreApi.Node.Builder builderForValue) {
        if (result.node_.isEmpty()) {
          result.node_ = new java.util.ArrayList<com.robonobo.core.api.proto.CoreApi.Node>();
        }
        result.node_.add(builderForValue.build());
        return this;
      }
      public Builder addAllNode(
          java.lang.Iterable<? extends com.robonobo.core.api.proto.CoreApi.Node> values) {
        if (result.node_.isEmpty()) {
          result.node_ = new java.util.ArrayList<com.robonobo.core.api.proto.CoreApi.Node>();
        }
        super.addAll(values, result.node_);
        return this;
      }
      public Builder clearNode() {
        result.node_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:coreapi.NodeList)
    }
    
    static {
      defaultInstance = new NodeList(true);
      com.robonobo.core.api.proto.CoreApi.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:coreapi.NodeList)
  }
  
  public static final class StreamAttributeMsg extends
      com.google.protobuf.GeneratedMessage {
    // Use StreamAttributeMsg.newBuilder() to construct.
    private StreamAttributeMsg() {
      initFields();
    }
    private StreamAttributeMsg(boolean noInit) {}
    
    private static final StreamAttributeMsg defaultInstance;
    public static StreamAttributeMsg getDefaultInstance() {
      return defaultInstance;
    }
    
    public StreamAttributeMsg getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.robonobo.core.api.proto.CoreApi.internal_static_coreapi_StreamAttributeMsg_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.robonobo.core.api.proto.CoreApi.internal_static_coreapi_StreamAttributeMsg_fieldAccessorTable;
    }
    
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // required string value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private boolean hasValue;
    private java.lang.String value_ = "";
    public boolean hasValue() { return hasValue; }
    public java.lang.String getValue() { return value_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasName) return false;
      if (!hasValue) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasName()) {
        output.writeString(1, getName());
      }
      if (hasValue()) {
        output.writeString(2, getValue());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      if (hasValue()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getValue());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg result;
      
      // Construct using com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg();
        return builder;
      }
      
      protected com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg.getDescriptor();
      }
      
      public com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg getDefaultInstanceForType() {
        return com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg) {
          return mergeFrom((com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg other) {
        if (other == com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setName(input.readString());
              break;
            }
            case 18: {
              setValue(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // required string value = 2;
      public boolean hasValue() {
        return result.hasValue();
      }
      public java.lang.String getValue() {
        return result.getValue();
      }
      public Builder setValue(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder clearValue() {
        result.hasValue = false;
        result.value_ = getDefaultInstance().getValue();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:coreapi.StreamAttributeMsg)
    }
    
    static {
      defaultInstance = new StreamAttributeMsg(true);
      com.robonobo.core.api.proto.CoreApi.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:coreapi.StreamAttributeMsg)
  }
  
  public static final class StreamMsg extends
      com.google.protobuf.GeneratedMessage {
    // Use StreamMsg.newBuilder() to construct.
    private StreamMsg() {
      initFields();
    }
    private StreamMsg(boolean noInit) {}
    
    private static final StreamMsg defaultInstance;
    public static StreamMsg getDefaultInstance() {
      return defaultInstance;
    }
    
    public StreamMsg getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.robonobo.core.api.proto.CoreApi.internal_static_coreapi_StreamMsg_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.robonobo.core.api.proto.CoreApi.internal_static_coreapi_StreamMsg_fieldAccessorTable;
    }
    
    // required string id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private boolean hasId;
    private java.lang.String id_ = "";
    public boolean hasId() { return hasId; }
    public java.lang.String getId() { return id_; }
    
    // required string mime_type = 2;
    public static final int MIME_TYPE_FIELD_NUMBER = 2;
    private boolean hasMimeType;
    private java.lang.String mimeType_ = "";
    public boolean hasMimeType() { return hasMimeType; }
    public java.lang.String getMimeType() { return mimeType_; }
    
    // required string title = 3;
    public static final int TITLE_FIELD_NUMBER = 3;
    private boolean hasTitle;
    private java.lang.String title_ = "";
    public boolean hasTitle() { return hasTitle; }
    public java.lang.String getTitle() { return title_; }
    
    // required int64 size = 4;
    public static final int SIZE_FIELD_NUMBER = 4;
    private boolean hasSize;
    private long size_ = 0L;
    public boolean hasSize() { return hasSize; }
    public long getSize() { return size_; }
    
    // optional string description = 5;
    public static final int DESCRIPTION_FIELD_NUMBER = 5;
    private boolean hasDescription;
    private java.lang.String description_ = "";
    public boolean hasDescription() { return hasDescription; }
    public java.lang.String getDescription() { return description_; }
    
    // optional int64 duration = 6;
    public static final int DURATION_FIELD_NUMBER = 6;
    private boolean hasDuration;
    private long duration_ = 0L;
    public boolean hasDuration() { return hasDuration; }
    public long getDuration() { return duration_; }
    
    // repeated .coreapi.StreamAttributeMsg attribute = 7;
    public static final int ATTRIBUTE_FIELD_NUMBER = 7;
    private java.util.List<com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg> attribute_ =
      java.util.Collections.emptyList();
    public java.util.List<com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg> getAttributeList() {
      return attribute_;
    }
    public int getAttributeCount() { return attribute_.size(); }
    public com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg getAttribute(int index) {
      return attribute_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasId) return false;
      if (!hasMimeType) return false;
      if (!hasTitle) return false;
      if (!hasSize) return false;
      for (com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg element : getAttributeList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasId()) {
        output.writeString(1, getId());
      }
      if (hasMimeType()) {
        output.writeString(2, getMimeType());
      }
      if (hasTitle()) {
        output.writeString(3, getTitle());
      }
      if (hasSize()) {
        output.writeInt64(4, getSize());
      }
      if (hasDescription()) {
        output.writeString(5, getDescription());
      }
      if (hasDuration()) {
        output.writeInt64(6, getDuration());
      }
      for (com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg element : getAttributeList()) {
        output.writeMessage(7, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getId());
      }
      if (hasMimeType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getMimeType());
      }
      if (hasTitle()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getTitle());
      }
      if (hasSize()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, getSize());
      }
      if (hasDescription()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getDescription());
      }
      if (hasDuration()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, getDuration());
      }
      for (com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg element : getAttributeList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.robonobo.core.api.proto.CoreApi.StreamMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.StreamMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.StreamMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.StreamMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.StreamMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.StreamMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.StreamMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.core.api.proto.CoreApi.StreamMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.core.api.proto.CoreApi.StreamMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.StreamMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.robonobo.core.api.proto.CoreApi.StreamMsg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.robonobo.core.api.proto.CoreApi.StreamMsg result;
      
      // Construct using com.robonobo.core.api.proto.CoreApi.StreamMsg.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.robonobo.core.api.proto.CoreApi.StreamMsg();
        return builder;
      }
      
      protected com.robonobo.core.api.proto.CoreApi.StreamMsg internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.robonobo.core.api.proto.CoreApi.StreamMsg();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.robonobo.core.api.proto.CoreApi.StreamMsg.getDescriptor();
      }
      
      public com.robonobo.core.api.proto.CoreApi.StreamMsg getDefaultInstanceForType() {
        return com.robonobo.core.api.proto.CoreApi.StreamMsg.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.robonobo.core.api.proto.CoreApi.StreamMsg build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.robonobo.core.api.proto.CoreApi.StreamMsg buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.robonobo.core.api.proto.CoreApi.StreamMsg buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.attribute_ != java.util.Collections.EMPTY_LIST) {
          result.attribute_ =
            java.util.Collections.unmodifiableList(result.attribute_);
        }
        com.robonobo.core.api.proto.CoreApi.StreamMsg returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.robonobo.core.api.proto.CoreApi.StreamMsg) {
          return mergeFrom((com.robonobo.core.api.proto.CoreApi.StreamMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.robonobo.core.api.proto.CoreApi.StreamMsg other) {
        if (other == com.robonobo.core.api.proto.CoreApi.StreamMsg.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasMimeType()) {
          setMimeType(other.getMimeType());
        }
        if (other.hasTitle()) {
          setTitle(other.getTitle());
        }
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        if (other.hasDescription()) {
          setDescription(other.getDescription());
        }
        if (other.hasDuration()) {
          setDuration(other.getDuration());
        }
        if (!other.attribute_.isEmpty()) {
          if (result.attribute_.isEmpty()) {
            result.attribute_ = new java.util.ArrayList<com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg>();
          }
          result.attribute_.addAll(other.attribute_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setId(input.readString());
              break;
            }
            case 18: {
              setMimeType(input.readString());
              break;
            }
            case 26: {
              setTitle(input.readString());
              break;
            }
            case 32: {
              setSize(input.readInt64());
              break;
            }
            case 42: {
              setDescription(input.readString());
              break;
            }
            case 48: {
              setDuration(input.readInt64());
              break;
            }
            case 58: {
              com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg.Builder subBuilder = com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAttribute(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string id = 1;
      public boolean hasId() {
        return result.hasId();
      }
      public java.lang.String getId() {
        return result.getId();
      }
      public Builder setId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = getDefaultInstance().getId();
        return this;
      }
      
      // required string mime_type = 2;
      public boolean hasMimeType() {
        return result.hasMimeType();
      }
      public java.lang.String getMimeType() {
        return result.getMimeType();
      }
      public Builder setMimeType(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasMimeType = true;
        result.mimeType_ = value;
        return this;
      }
      public Builder clearMimeType() {
        result.hasMimeType = false;
        result.mimeType_ = getDefaultInstance().getMimeType();
        return this;
      }
      
      // required string title = 3;
      public boolean hasTitle() {
        return result.hasTitle();
      }
      public java.lang.String getTitle() {
        return result.getTitle();
      }
      public Builder setTitle(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasTitle = true;
        result.title_ = value;
        return this;
      }
      public Builder clearTitle() {
        result.hasTitle = false;
        result.title_ = getDefaultInstance().getTitle();
        return this;
      }
      
      // required int64 size = 4;
      public boolean hasSize() {
        return result.hasSize();
      }
      public long getSize() {
        return result.getSize();
      }
      public Builder setSize(long value) {
        result.hasSize = true;
        result.size_ = value;
        return this;
      }
      public Builder clearSize() {
        result.hasSize = false;
        result.size_ = 0L;
        return this;
      }
      
      // optional string description = 5;
      public boolean hasDescription() {
        return result.hasDescription();
      }
      public java.lang.String getDescription() {
        return result.getDescription();
      }
      public Builder setDescription(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasDescription = true;
        result.description_ = value;
        return this;
      }
      public Builder clearDescription() {
        result.hasDescription = false;
        result.description_ = getDefaultInstance().getDescription();
        return this;
      }
      
      // optional int64 duration = 6;
      public boolean hasDuration() {
        return result.hasDuration();
      }
      public long getDuration() {
        return result.getDuration();
      }
      public Builder setDuration(long value) {
        result.hasDuration = true;
        result.duration_ = value;
        return this;
      }
      public Builder clearDuration() {
        result.hasDuration = false;
        result.duration_ = 0L;
        return this;
      }
      
      // repeated .coreapi.StreamAttributeMsg attribute = 7;
      public java.util.List<com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg> getAttributeList() {
        return java.util.Collections.unmodifiableList(result.attribute_);
      }
      public int getAttributeCount() {
        return result.getAttributeCount();
      }
      public com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg getAttribute(int index) {
        return result.getAttribute(index);
      }
      public Builder setAttribute(int index, com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.attribute_.set(index, value);
        return this;
      }
      public Builder setAttribute(int index, com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg.Builder builderForValue) {
        result.attribute_.set(index, builderForValue.build());
        return this;
      }
      public Builder addAttribute(com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.attribute_.isEmpty()) {
          result.attribute_ = new java.util.ArrayList<com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg>();
        }
        result.attribute_.add(value);
        return this;
      }
      public Builder addAttribute(com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg.Builder builderForValue) {
        if (result.attribute_.isEmpty()) {
          result.attribute_ = new java.util.ArrayList<com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg>();
        }
        result.attribute_.add(builderForValue.build());
        return this;
      }
      public Builder addAllAttribute(
          java.lang.Iterable<? extends com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg> values) {
        if (result.attribute_.isEmpty()) {
          result.attribute_ = new java.util.ArrayList<com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg>();
        }
        super.addAll(values, result.attribute_);
        return this;
      }
      public Builder clearAttribute() {
        result.attribute_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:coreapi.StreamMsg)
    }
    
    static {
      defaultInstance = new StreamMsg(true);
      com.robonobo.core.api.proto.CoreApi.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:coreapi.StreamMsg)
  }
  
  public static final class UserMsg extends
      com.google.protobuf.GeneratedMessage {
    // Use UserMsg.newBuilder() to construct.
    private UserMsg() {
      initFields();
    }
    private UserMsg(boolean noInit) {}
    
    private static final UserMsg defaultInstance;
    public static UserMsg getDefaultInstance() {
      return defaultInstance;
    }
    
    public UserMsg getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.robonobo.core.api.proto.CoreApi.internal_static_coreapi_UserMsg_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.robonobo.core.api.proto.CoreApi.internal_static_coreapi_UserMsg_fieldAccessorTable;
    }
    
    // required int64 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private boolean hasId;
    private long id_ = 0L;
    public boolean hasId() { return hasId; }
    public long getId() { return id_; }
    
    // required string email = 2;
    public static final int EMAIL_FIELD_NUMBER = 2;
    private boolean hasEmail;
    private java.lang.String email_ = "";
    public boolean hasEmail() { return hasEmail; }
    public java.lang.String getEmail() { return email_; }
    
    // required string friendly_name = 3;
    public static final int FRIENDLY_NAME_FIELD_NUMBER = 3;
    private boolean hasFriendlyName;
    private java.lang.String friendlyName_ = "";
    public boolean hasFriendlyName() { return hasFriendlyName; }
    public java.lang.String getFriendlyName() { return friendlyName_; }
    
    // optional int32 invites_left = 4;
    public static final int INVITES_LEFT_FIELD_NUMBER = 4;
    private boolean hasInvitesLeft;
    private int invitesLeft_ = 0;
    public boolean hasInvitesLeft() { return hasInvitesLeft; }
    public int getInvitesLeft() { return invitesLeft_; }
    
    // optional string password = 5;
    public static final int PASSWORD_FIELD_NUMBER = 5;
    private boolean hasPassword;
    private java.lang.String password_ = "";
    public boolean hasPassword() { return hasPassword; }
    public java.lang.String getPassword() { return password_; }
    
    // optional string description = 6;
    public static final int DESCRIPTION_FIELD_NUMBER = 6;
    private boolean hasDescription;
    private java.lang.String description_ = "";
    public boolean hasDescription() { return hasDescription; }
    public java.lang.String getDescription() { return description_; }
    
    // optional string image_url = 7;
    public static final int IMAGE_URL_FIELD_NUMBER = 7;
    private boolean hasImageUrl;
    private java.lang.String imageUrl_ = "";
    public boolean hasImageUrl() { return hasImageUrl; }
    public java.lang.String getImageUrl() { return imageUrl_; }
    
    // optional int64 updated_date = 8;
    public static final int UPDATED_DATE_FIELD_NUMBER = 8;
    private boolean hasUpdatedDate;
    private long updatedDate_ = 0L;
    public boolean hasUpdatedDate() { return hasUpdatedDate; }
    public long getUpdatedDate() { return updatedDate_; }
    
    // repeated int64 friend_id = 9;
    public static final int FRIEND_ID_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Long> friendId_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Long> getFriendIdList() {
      return friendId_;
    }
    public int getFriendIdCount() { return friendId_.size(); }
    public long getFriendId(int index) {
      return friendId_.get(index);
    }
    
    // repeated int64 playlist_id = 10;
    public static final int PLAYLIST_ID_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Long> playlistId_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Long> getPlaylistIdList() {
      return playlistId_;
    }
    public int getPlaylistIdCount() { return playlistId_.size(); }
    public long getPlaylistId(int index) {
      return playlistId_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasId) return false;
      if (!hasEmail) return false;
      if (!hasFriendlyName) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasId()) {
        output.writeInt64(1, getId());
      }
      if (hasEmail()) {
        output.writeString(2, getEmail());
      }
      if (hasFriendlyName()) {
        output.writeString(3, getFriendlyName());
      }
      if (hasInvitesLeft()) {
        output.writeInt32(4, getInvitesLeft());
      }
      if (hasPassword()) {
        output.writeString(5, getPassword());
      }
      if (hasDescription()) {
        output.writeString(6, getDescription());
      }
      if (hasImageUrl()) {
        output.writeString(7, getImageUrl());
      }
      if (hasUpdatedDate()) {
        output.writeInt64(8, getUpdatedDate());
      }
      for (long element : getFriendIdList()) {
        output.writeInt64(9, element);
      }
      for (long element : getPlaylistIdList()) {
        output.writeInt64(10, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, getId());
      }
      if (hasEmail()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getEmail());
      }
      if (hasFriendlyName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getFriendlyName());
      }
      if (hasInvitesLeft()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, getInvitesLeft());
      }
      if (hasPassword()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getPassword());
      }
      if (hasDescription()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(6, getDescription());
      }
      if (hasImageUrl()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(7, getImageUrl());
      }
      if (hasUpdatedDate()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, getUpdatedDate());
      }
      {
        int dataSize = 0;
        for (long element : getFriendIdList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getFriendIdList().size();
      }
      {
        int dataSize = 0;
        for (long element : getPlaylistIdList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getPlaylistIdList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.robonobo.core.api.proto.CoreApi.UserMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.UserMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.UserMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.UserMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.UserMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.UserMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.UserMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.core.api.proto.CoreApi.UserMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.core.api.proto.CoreApi.UserMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.UserMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.robonobo.core.api.proto.CoreApi.UserMsg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.robonobo.core.api.proto.CoreApi.UserMsg result;
      
      // Construct using com.robonobo.core.api.proto.CoreApi.UserMsg.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.robonobo.core.api.proto.CoreApi.UserMsg();
        return builder;
      }
      
      protected com.robonobo.core.api.proto.CoreApi.UserMsg internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.robonobo.core.api.proto.CoreApi.UserMsg();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.robonobo.core.api.proto.CoreApi.UserMsg.getDescriptor();
      }
      
      public com.robonobo.core.api.proto.CoreApi.UserMsg getDefaultInstanceForType() {
        return com.robonobo.core.api.proto.CoreApi.UserMsg.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.robonobo.core.api.proto.CoreApi.UserMsg build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.robonobo.core.api.proto.CoreApi.UserMsg buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.robonobo.core.api.proto.CoreApi.UserMsg buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.friendId_ != java.util.Collections.EMPTY_LIST) {
          result.friendId_ =
            java.util.Collections.unmodifiableList(result.friendId_);
        }
        if (result.playlistId_ != java.util.Collections.EMPTY_LIST) {
          result.playlistId_ =
            java.util.Collections.unmodifiableList(result.playlistId_);
        }
        com.robonobo.core.api.proto.CoreApi.UserMsg returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.robonobo.core.api.proto.CoreApi.UserMsg) {
          return mergeFrom((com.robonobo.core.api.proto.CoreApi.UserMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.robonobo.core.api.proto.CoreApi.UserMsg other) {
        if (other == com.robonobo.core.api.proto.CoreApi.UserMsg.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasEmail()) {
          setEmail(other.getEmail());
        }
        if (other.hasFriendlyName()) {
          setFriendlyName(other.getFriendlyName());
        }
        if (other.hasInvitesLeft()) {
          setInvitesLeft(other.getInvitesLeft());
        }
        if (other.hasPassword()) {
          setPassword(other.getPassword());
        }
        if (other.hasDescription()) {
          setDescription(other.getDescription());
        }
        if (other.hasImageUrl()) {
          setImageUrl(other.getImageUrl());
        }
        if (other.hasUpdatedDate()) {
          setUpdatedDate(other.getUpdatedDate());
        }
        if (!other.friendId_.isEmpty()) {
          if (result.friendId_.isEmpty()) {
            result.friendId_ = new java.util.ArrayList<java.lang.Long>();
          }
          result.friendId_.addAll(other.friendId_);
        }
        if (!other.playlistId_.isEmpty()) {
          if (result.playlistId_.isEmpty()) {
            result.playlistId_ = new java.util.ArrayList<java.lang.Long>();
          }
          result.playlistId_.addAll(other.playlistId_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setId(input.readInt64());
              break;
            }
            case 18: {
              setEmail(input.readString());
              break;
            }
            case 26: {
              setFriendlyName(input.readString());
              break;
            }
            case 32: {
              setInvitesLeft(input.readInt32());
              break;
            }
            case 42: {
              setPassword(input.readString());
              break;
            }
            case 50: {
              setDescription(input.readString());
              break;
            }
            case 58: {
              setImageUrl(input.readString());
              break;
            }
            case 64: {
              setUpdatedDate(input.readInt64());
              break;
            }
            case 72: {
              addFriendId(input.readInt64());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addFriendId(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 80: {
              addPlaylistId(input.readInt64());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addPlaylistId(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // required int64 id = 1;
      public boolean hasId() {
        return result.hasId();
      }
      public long getId() {
        return result.getId();
      }
      public Builder setId(long value) {
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = 0L;
        return this;
      }
      
      // required string email = 2;
      public boolean hasEmail() {
        return result.hasEmail();
      }
      public java.lang.String getEmail() {
        return result.getEmail();
      }
      public Builder setEmail(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasEmail = true;
        result.email_ = value;
        return this;
      }
      public Builder clearEmail() {
        result.hasEmail = false;
        result.email_ = getDefaultInstance().getEmail();
        return this;
      }
      
      // required string friendly_name = 3;
      public boolean hasFriendlyName() {
        return result.hasFriendlyName();
      }
      public java.lang.String getFriendlyName() {
        return result.getFriendlyName();
      }
      public Builder setFriendlyName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasFriendlyName = true;
        result.friendlyName_ = value;
        return this;
      }
      public Builder clearFriendlyName() {
        result.hasFriendlyName = false;
        result.friendlyName_ = getDefaultInstance().getFriendlyName();
        return this;
      }
      
      // optional int32 invites_left = 4;
      public boolean hasInvitesLeft() {
        return result.hasInvitesLeft();
      }
      public int getInvitesLeft() {
        return result.getInvitesLeft();
      }
      public Builder setInvitesLeft(int value) {
        result.hasInvitesLeft = true;
        result.invitesLeft_ = value;
        return this;
      }
      public Builder clearInvitesLeft() {
        result.hasInvitesLeft = false;
        result.invitesLeft_ = 0;
        return this;
      }
      
      // optional string password = 5;
      public boolean hasPassword() {
        return result.hasPassword();
      }
      public java.lang.String getPassword() {
        return result.getPassword();
      }
      public Builder setPassword(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPassword = true;
        result.password_ = value;
        return this;
      }
      public Builder clearPassword() {
        result.hasPassword = false;
        result.password_ = getDefaultInstance().getPassword();
        return this;
      }
      
      // optional string description = 6;
      public boolean hasDescription() {
        return result.hasDescription();
      }
      public java.lang.String getDescription() {
        return result.getDescription();
      }
      public Builder setDescription(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasDescription = true;
        result.description_ = value;
        return this;
      }
      public Builder clearDescription() {
        result.hasDescription = false;
        result.description_ = getDefaultInstance().getDescription();
        return this;
      }
      
      // optional string image_url = 7;
      public boolean hasImageUrl() {
        return result.hasImageUrl();
      }
      public java.lang.String getImageUrl() {
        return result.getImageUrl();
      }
      public Builder setImageUrl(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasImageUrl = true;
        result.imageUrl_ = value;
        return this;
      }
      public Builder clearImageUrl() {
        result.hasImageUrl = false;
        result.imageUrl_ = getDefaultInstance().getImageUrl();
        return this;
      }
      
      // optional int64 updated_date = 8;
      public boolean hasUpdatedDate() {
        return result.hasUpdatedDate();
      }
      public long getUpdatedDate() {
        return result.getUpdatedDate();
      }
      public Builder setUpdatedDate(long value) {
        result.hasUpdatedDate = true;
        result.updatedDate_ = value;
        return this;
      }
      public Builder clearUpdatedDate() {
        result.hasUpdatedDate = false;
        result.updatedDate_ = 0L;
        return this;
      }
      
      // repeated int64 friend_id = 9;
      public java.util.List<java.lang.Long> getFriendIdList() {
        return java.util.Collections.unmodifiableList(result.friendId_);
      }
      public int getFriendIdCount() {
        return result.getFriendIdCount();
      }
      public long getFriendId(int index) {
        return result.getFriendId(index);
      }
      public Builder setFriendId(int index, long value) {
        result.friendId_.set(index, value);
        return this;
      }
      public Builder addFriendId(long value) {
        if (result.friendId_.isEmpty()) {
          result.friendId_ = new java.util.ArrayList<java.lang.Long>();
        }
        result.friendId_.add(value);
        return this;
      }
      public Builder addAllFriendId(
          java.lang.Iterable<? extends java.lang.Long> values) {
        if (result.friendId_.isEmpty()) {
          result.friendId_ = new java.util.ArrayList<java.lang.Long>();
        }
        super.addAll(values, result.friendId_);
        return this;
      }
      public Builder clearFriendId() {
        result.friendId_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated int64 playlist_id = 10;
      public java.util.List<java.lang.Long> getPlaylistIdList() {
        return java.util.Collections.unmodifiableList(result.playlistId_);
      }
      public int getPlaylistIdCount() {
        return result.getPlaylistIdCount();
      }
      public long getPlaylistId(int index) {
        return result.getPlaylistId(index);
      }
      public Builder setPlaylistId(int index, long value) {
        result.playlistId_.set(index, value);
        return this;
      }
      public Builder addPlaylistId(long value) {
        if (result.playlistId_.isEmpty()) {
          result.playlistId_ = new java.util.ArrayList<java.lang.Long>();
        }
        result.playlistId_.add(value);
        return this;
      }
      public Builder addAllPlaylistId(
          java.lang.Iterable<? extends java.lang.Long> values) {
        if (result.playlistId_.isEmpty()) {
          result.playlistId_ = new java.util.ArrayList<java.lang.Long>();
        }
        super.addAll(values, result.playlistId_);
        return this;
      }
      public Builder clearPlaylistId() {
        result.playlistId_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:coreapi.UserMsg)
    }
    
    static {
      defaultInstance = new UserMsg(true);
      com.robonobo.core.api.proto.CoreApi.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:coreapi.UserMsg)
  }
  
  public static final class PlaylistMsg extends
      com.google.protobuf.GeneratedMessage {
    // Use PlaylistMsg.newBuilder() to construct.
    private PlaylistMsg() {
      initFields();
    }
    private PlaylistMsg(boolean noInit) {}
    
    private static final PlaylistMsg defaultInstance;
    public static PlaylistMsg getDefaultInstance() {
      return defaultInstance;
    }
    
    public PlaylistMsg getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.robonobo.core.api.proto.CoreApi.internal_static_coreapi_PlaylistMsg_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.robonobo.core.api.proto.CoreApi.internal_static_coreapi_PlaylistMsg_fieldAccessorTable;
    }
    
    // required int64 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private boolean hasId;
    private long id_ = 0L;
    public boolean hasId() { return hasId; }
    public long getId() { return id_; }
    
    // required string title = 2;
    public static final int TITLE_FIELD_NUMBER = 2;
    private boolean hasTitle;
    private java.lang.String title_ = "";
    public boolean hasTitle() { return hasTitle; }
    public java.lang.String getTitle() { return title_; }
    
    // required string visibility = 3;
    public static final int VISIBILITY_FIELD_NUMBER = 3;
    private boolean hasVisibility;
    private java.lang.String visibility_ = "";
    public boolean hasVisibility() { return hasVisibility; }
    public java.lang.String getVisibility() { return visibility_; }
    
    // optional int64 updated_date = 4;
    public static final int UPDATED_DATE_FIELD_NUMBER = 4;
    private boolean hasUpdatedDate;
    private long updatedDate_ = 0L;
    public boolean hasUpdatedDate() { return hasUpdatedDate; }
    public long getUpdatedDate() { return updatedDate_; }
    
    // optional string description = 5;
    public static final int DESCRIPTION_FIELD_NUMBER = 5;
    private boolean hasDescription;
    private java.lang.String description_ = "";
    public boolean hasDescription() { return hasDescription; }
    public java.lang.String getDescription() { return description_; }
    
    // repeated string stream_id = 6;
    public static final int STREAM_ID_FIELD_NUMBER = 6;
    private java.util.List<java.lang.String> streamId_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getStreamIdList() {
      return streamId_;
    }
    public int getStreamIdCount() { return streamId_.size(); }
    public java.lang.String getStreamId(int index) {
      return streamId_.get(index);
    }
    
    // repeated int64 owner_id = 7;
    public static final int OWNER_ID_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Long> ownerId_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Long> getOwnerIdList() {
      return ownerId_;
    }
    public int getOwnerIdCount() { return ownerId_.size(); }
    public long getOwnerId(int index) {
      return ownerId_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasId) return false;
      if (!hasTitle) return false;
      if (!hasVisibility) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasId()) {
        output.writeInt64(1, getId());
      }
      if (hasTitle()) {
        output.writeString(2, getTitle());
      }
      if (hasVisibility()) {
        output.writeString(3, getVisibility());
      }
      if (hasUpdatedDate()) {
        output.writeInt64(4, getUpdatedDate());
      }
      if (hasDescription()) {
        output.writeString(5, getDescription());
      }
      for (java.lang.String element : getStreamIdList()) {
        output.writeString(6, element);
      }
      for (long element : getOwnerIdList()) {
        output.writeInt64(7, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, getId());
      }
      if (hasTitle()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getTitle());
      }
      if (hasVisibility()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getVisibility());
      }
      if (hasUpdatedDate()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, getUpdatedDate());
      }
      if (hasDescription()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getDescription());
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getStreamIdList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getStreamIdList().size();
      }
      {
        int dataSize = 0;
        for (long element : getOwnerIdList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getOwnerIdList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.robonobo.core.api.proto.CoreApi.PlaylistMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.PlaylistMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.PlaylistMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.PlaylistMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.PlaylistMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.PlaylistMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.PlaylistMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.core.api.proto.CoreApi.PlaylistMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.core.api.proto.CoreApi.PlaylistMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.PlaylistMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.robonobo.core.api.proto.CoreApi.PlaylistMsg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.robonobo.core.api.proto.CoreApi.PlaylistMsg result;
      
      // Construct using com.robonobo.core.api.proto.CoreApi.PlaylistMsg.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.robonobo.core.api.proto.CoreApi.PlaylistMsg();
        return builder;
      }
      
      protected com.robonobo.core.api.proto.CoreApi.PlaylistMsg internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.robonobo.core.api.proto.CoreApi.PlaylistMsg();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.robonobo.core.api.proto.CoreApi.PlaylistMsg.getDescriptor();
      }
      
      public com.robonobo.core.api.proto.CoreApi.PlaylistMsg getDefaultInstanceForType() {
        return com.robonobo.core.api.proto.CoreApi.PlaylistMsg.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.robonobo.core.api.proto.CoreApi.PlaylistMsg build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.robonobo.core.api.proto.CoreApi.PlaylistMsg buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.robonobo.core.api.proto.CoreApi.PlaylistMsg buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.streamId_ != java.util.Collections.EMPTY_LIST) {
          result.streamId_ =
            java.util.Collections.unmodifiableList(result.streamId_);
        }
        if (result.ownerId_ != java.util.Collections.EMPTY_LIST) {
          result.ownerId_ =
            java.util.Collections.unmodifiableList(result.ownerId_);
        }
        com.robonobo.core.api.proto.CoreApi.PlaylistMsg returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.robonobo.core.api.proto.CoreApi.PlaylistMsg) {
          return mergeFrom((com.robonobo.core.api.proto.CoreApi.PlaylistMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.robonobo.core.api.proto.CoreApi.PlaylistMsg other) {
        if (other == com.robonobo.core.api.proto.CoreApi.PlaylistMsg.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasTitle()) {
          setTitle(other.getTitle());
        }
        if (other.hasVisibility()) {
          setVisibility(other.getVisibility());
        }
        if (other.hasUpdatedDate()) {
          setUpdatedDate(other.getUpdatedDate());
        }
        if (other.hasDescription()) {
          setDescription(other.getDescription());
        }
        if (!other.streamId_.isEmpty()) {
          if (result.streamId_.isEmpty()) {
            result.streamId_ = new java.util.ArrayList<java.lang.String>();
          }
          result.streamId_.addAll(other.streamId_);
        }
        if (!other.ownerId_.isEmpty()) {
          if (result.ownerId_.isEmpty()) {
            result.ownerId_ = new java.util.ArrayList<java.lang.Long>();
          }
          result.ownerId_.addAll(other.ownerId_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setId(input.readInt64());
              break;
            }
            case 18: {
              setTitle(input.readString());
              break;
            }
            case 26: {
              setVisibility(input.readString());
              break;
            }
            case 32: {
              setUpdatedDate(input.readInt64());
              break;
            }
            case 42: {
              setDescription(input.readString());
              break;
            }
            case 50: {
              addStreamId(input.readString());
              break;
            }
            case 56: {
              addOwnerId(input.readInt64());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addOwnerId(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // required int64 id = 1;
      public boolean hasId() {
        return result.hasId();
      }
      public long getId() {
        return result.getId();
      }
      public Builder setId(long value) {
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = 0L;
        return this;
      }
      
      // required string title = 2;
      public boolean hasTitle() {
        return result.hasTitle();
      }
      public java.lang.String getTitle() {
        return result.getTitle();
      }
      public Builder setTitle(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasTitle = true;
        result.title_ = value;
        return this;
      }
      public Builder clearTitle() {
        result.hasTitle = false;
        result.title_ = getDefaultInstance().getTitle();
        return this;
      }
      
      // required string visibility = 3;
      public boolean hasVisibility() {
        return result.hasVisibility();
      }
      public java.lang.String getVisibility() {
        return result.getVisibility();
      }
      public Builder setVisibility(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasVisibility = true;
        result.visibility_ = value;
        return this;
      }
      public Builder clearVisibility() {
        result.hasVisibility = false;
        result.visibility_ = getDefaultInstance().getVisibility();
        return this;
      }
      
      // optional int64 updated_date = 4;
      public boolean hasUpdatedDate() {
        return result.hasUpdatedDate();
      }
      public long getUpdatedDate() {
        return result.getUpdatedDate();
      }
      public Builder setUpdatedDate(long value) {
        result.hasUpdatedDate = true;
        result.updatedDate_ = value;
        return this;
      }
      public Builder clearUpdatedDate() {
        result.hasUpdatedDate = false;
        result.updatedDate_ = 0L;
        return this;
      }
      
      // optional string description = 5;
      public boolean hasDescription() {
        return result.hasDescription();
      }
      public java.lang.String getDescription() {
        return result.getDescription();
      }
      public Builder setDescription(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasDescription = true;
        result.description_ = value;
        return this;
      }
      public Builder clearDescription() {
        result.hasDescription = false;
        result.description_ = getDefaultInstance().getDescription();
        return this;
      }
      
      // repeated string stream_id = 6;
      public java.util.List<java.lang.String> getStreamIdList() {
        return java.util.Collections.unmodifiableList(result.streamId_);
      }
      public int getStreamIdCount() {
        return result.getStreamIdCount();
      }
      public java.lang.String getStreamId(int index) {
        return result.getStreamId(index);
      }
      public Builder setStreamId(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.streamId_.set(index, value);
        return this;
      }
      public Builder addStreamId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.streamId_.isEmpty()) {
          result.streamId_ = new java.util.ArrayList<java.lang.String>();
        }
        result.streamId_.add(value);
        return this;
      }
      public Builder addAllStreamId(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.streamId_.isEmpty()) {
          result.streamId_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.streamId_);
        return this;
      }
      public Builder clearStreamId() {
        result.streamId_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated int64 owner_id = 7;
      public java.util.List<java.lang.Long> getOwnerIdList() {
        return java.util.Collections.unmodifiableList(result.ownerId_);
      }
      public int getOwnerIdCount() {
        return result.getOwnerIdCount();
      }
      public long getOwnerId(int index) {
        return result.getOwnerId(index);
      }
      public Builder setOwnerId(int index, long value) {
        result.ownerId_.set(index, value);
        return this;
      }
      public Builder addOwnerId(long value) {
        if (result.ownerId_.isEmpty()) {
          result.ownerId_ = new java.util.ArrayList<java.lang.Long>();
        }
        result.ownerId_.add(value);
        return this;
      }
      public Builder addAllOwnerId(
          java.lang.Iterable<? extends java.lang.Long> values) {
        if (result.ownerId_.isEmpty()) {
          result.ownerId_ = new java.util.ArrayList<java.lang.Long>();
        }
        super.addAll(values, result.ownerId_);
        return this;
      }
      public Builder clearOwnerId() {
        result.ownerId_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:coreapi.PlaylistMsg)
    }
    
    static {
      defaultInstance = new PlaylistMsg(true);
      com.robonobo.core.api.proto.CoreApi.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:coreapi.PlaylistMsg)
  }
  
  public static final class LibraryTrackMsg extends
      com.google.protobuf.GeneratedMessage {
    // Use LibraryTrackMsg.newBuilder() to construct.
    private LibraryTrackMsg() {
      initFields();
    }
    private LibraryTrackMsg(boolean noInit) {}
    
    private static final LibraryTrackMsg defaultInstance;
    public static LibraryTrackMsg getDefaultInstance() {
      return defaultInstance;
    }
    
    public LibraryTrackMsg getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.robonobo.core.api.proto.CoreApi.internal_static_coreapi_LibraryTrackMsg_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.robonobo.core.api.proto.CoreApi.internal_static_coreapi_LibraryTrackMsg_fieldAccessorTable;
    }
    
    // required string stream_id = 1;
    public static final int STREAM_ID_FIELD_NUMBER = 1;
    private boolean hasStreamId;
    private java.lang.String streamId_ = "";
    public boolean hasStreamId() { return hasStreamId; }
    public java.lang.String getStreamId() { return streamId_; }
    
    // optional int64 added_date = 2;
    public static final int ADDED_DATE_FIELD_NUMBER = 2;
    private boolean hasAddedDate;
    private long addedDate_ = 0L;
    public boolean hasAddedDate() { return hasAddedDate; }
    public long getAddedDate() { return addedDate_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasStreamId) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasStreamId()) {
        output.writeString(1, getStreamId());
      }
      if (hasAddedDate()) {
        output.writeInt64(2, getAddedDate());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasStreamId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getStreamId());
      }
      if (hasAddedDate()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, getAddedDate());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg result;
      
      // Construct using com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg();
        return builder;
      }
      
      protected com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg.getDescriptor();
      }
      
      public com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg getDefaultInstanceForType() {
        return com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg) {
          return mergeFrom((com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg other) {
        if (other == com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg.getDefaultInstance()) return this;
        if (other.hasStreamId()) {
          setStreamId(other.getStreamId());
        }
        if (other.hasAddedDate()) {
          setAddedDate(other.getAddedDate());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setStreamId(input.readString());
              break;
            }
            case 16: {
              setAddedDate(input.readInt64());
              break;
            }
          }
        }
      }
      
      
      // required string stream_id = 1;
      public boolean hasStreamId() {
        return result.hasStreamId();
      }
      public java.lang.String getStreamId() {
        return result.getStreamId();
      }
      public Builder setStreamId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasStreamId = true;
        result.streamId_ = value;
        return this;
      }
      public Builder clearStreamId() {
        result.hasStreamId = false;
        result.streamId_ = getDefaultInstance().getStreamId();
        return this;
      }
      
      // optional int64 added_date = 2;
      public boolean hasAddedDate() {
        return result.hasAddedDate();
      }
      public long getAddedDate() {
        return result.getAddedDate();
      }
      public Builder setAddedDate(long value) {
        result.hasAddedDate = true;
        result.addedDate_ = value;
        return this;
      }
      public Builder clearAddedDate() {
        result.hasAddedDate = false;
        result.addedDate_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:coreapi.LibraryTrackMsg)
    }
    
    static {
      defaultInstance = new LibraryTrackMsg(true);
      com.robonobo.core.api.proto.CoreApi.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:coreapi.LibraryTrackMsg)
  }
  
  public static final class LibraryMsg extends
      com.google.protobuf.GeneratedMessage {
    // Use LibraryMsg.newBuilder() to construct.
    private LibraryMsg() {
      initFields();
    }
    private LibraryMsg(boolean noInit) {}
    
    private static final LibraryMsg defaultInstance;
    public static LibraryMsg getDefaultInstance() {
      return defaultInstance;
    }
    
    public LibraryMsg getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.robonobo.core.api.proto.CoreApi.internal_static_coreapi_LibraryMsg_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.robonobo.core.api.proto.CoreApi.internal_static_coreapi_LibraryMsg_fieldAccessorTable;
    }
    
    // optional int64 user_id = 1;
    public static final int USER_ID_FIELD_NUMBER = 1;
    private boolean hasUserId;
    private long userId_ = 0L;
    public boolean hasUserId() { return hasUserId; }
    public long getUserId() { return userId_; }
    
    // repeated .coreapi.LibraryTrackMsg track = 2;
    public static final int TRACK_FIELD_NUMBER = 2;
    private java.util.List<com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg> track_ =
      java.util.Collections.emptyList();
    public java.util.List<com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg> getTrackList() {
      return track_;
    }
    public int getTrackCount() { return track_.size(); }
    public com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg getTrack(int index) {
      return track_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg element : getTrackList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasUserId()) {
        output.writeInt64(1, getUserId());
      }
      for (com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg element : getTrackList()) {
        output.writeMessage(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasUserId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, getUserId());
      }
      for (com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg element : getTrackList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.robonobo.core.api.proto.CoreApi.LibraryMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.LibraryMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.LibraryMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.LibraryMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.LibraryMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.LibraryMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.LibraryMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.core.api.proto.CoreApi.LibraryMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.core.api.proto.CoreApi.LibraryMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.LibraryMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.robonobo.core.api.proto.CoreApi.LibraryMsg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.robonobo.core.api.proto.CoreApi.LibraryMsg result;
      
      // Construct using com.robonobo.core.api.proto.CoreApi.LibraryMsg.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.robonobo.core.api.proto.CoreApi.LibraryMsg();
        return builder;
      }
      
      protected com.robonobo.core.api.proto.CoreApi.LibraryMsg internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.robonobo.core.api.proto.CoreApi.LibraryMsg();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.robonobo.core.api.proto.CoreApi.LibraryMsg.getDescriptor();
      }
      
      public com.robonobo.core.api.proto.CoreApi.LibraryMsg getDefaultInstanceForType() {
        return com.robonobo.core.api.proto.CoreApi.LibraryMsg.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.robonobo.core.api.proto.CoreApi.LibraryMsg build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.robonobo.core.api.proto.CoreApi.LibraryMsg buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.robonobo.core.api.proto.CoreApi.LibraryMsg buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.track_ != java.util.Collections.EMPTY_LIST) {
          result.track_ =
            java.util.Collections.unmodifiableList(result.track_);
        }
        com.robonobo.core.api.proto.CoreApi.LibraryMsg returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.robonobo.core.api.proto.CoreApi.LibraryMsg) {
          return mergeFrom((com.robonobo.core.api.proto.CoreApi.LibraryMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.robonobo.core.api.proto.CoreApi.LibraryMsg other) {
        if (other == com.robonobo.core.api.proto.CoreApi.LibraryMsg.getDefaultInstance()) return this;
        if (other.hasUserId()) {
          setUserId(other.getUserId());
        }
        if (!other.track_.isEmpty()) {
          if (result.track_.isEmpty()) {
            result.track_ = new java.util.ArrayList<com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg>();
          }
          result.track_.addAll(other.track_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setUserId(input.readInt64());
              break;
            }
            case 18: {
              com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg.Builder subBuilder = com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addTrack(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional int64 user_id = 1;
      public boolean hasUserId() {
        return result.hasUserId();
      }
      public long getUserId() {
        return result.getUserId();
      }
      public Builder setUserId(long value) {
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder clearUserId() {
        result.hasUserId = false;
        result.userId_ = 0L;
        return this;
      }
      
      // repeated .coreapi.LibraryTrackMsg track = 2;
      public java.util.List<com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg> getTrackList() {
        return java.util.Collections.unmodifiableList(result.track_);
      }
      public int getTrackCount() {
        return result.getTrackCount();
      }
      public com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg getTrack(int index) {
        return result.getTrack(index);
      }
      public Builder setTrack(int index, com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.track_.set(index, value);
        return this;
      }
      public Builder setTrack(int index, com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg.Builder builderForValue) {
        result.track_.set(index, builderForValue.build());
        return this;
      }
      public Builder addTrack(com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.track_.isEmpty()) {
          result.track_ = new java.util.ArrayList<com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg>();
        }
        result.track_.add(value);
        return this;
      }
      public Builder addTrack(com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg.Builder builderForValue) {
        if (result.track_.isEmpty()) {
          result.track_ = new java.util.ArrayList<com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg>();
        }
        result.track_.add(builderForValue.build());
        return this;
      }
      public Builder addAllTrack(
          java.lang.Iterable<? extends com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg> values) {
        if (result.track_.isEmpty()) {
          result.track_ = new java.util.ArrayList<com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg>();
        }
        super.addAll(values, result.track_);
        return this;
      }
      public Builder clearTrack() {
        result.track_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:coreapi.LibraryMsg)
    }
    
    static {
      defaultInstance = new LibraryMsg(true);
      com.robonobo.core.api.proto.CoreApi.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:coreapi.LibraryMsg)
  }
  
  public static final class InviteMsg extends
      com.google.protobuf.GeneratedMessage {
    // Use InviteMsg.newBuilder() to construct.
    private InviteMsg() {
      initFields();
    }
    private InviteMsg(boolean noInit) {}
    
    private static final InviteMsg defaultInstance;
    public static InviteMsg getDefaultInstance() {
      return defaultInstance;
    }
    
    public InviteMsg getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.robonobo.core.api.proto.CoreApi.internal_static_coreapi_InviteMsg_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.robonobo.core.api.proto.CoreApi.internal_static_coreapi_InviteMsg_fieldAccessorTable;
    }
    
    // required int64 invite_id = 1;
    public static final int INVITE_ID_FIELD_NUMBER = 1;
    private boolean hasInviteId;
    private long inviteId_ = 0L;
    public boolean hasInviteId() { return hasInviteId; }
    public long getInviteId() { return inviteId_; }
    
    // required string email = 2;
    public static final int EMAIL_FIELD_NUMBER = 2;
    private boolean hasEmail;
    private java.lang.String email_ = "";
    public boolean hasEmail() { return hasEmail; }
    public java.lang.String getEmail() { return email_; }
    
    // required string invite_code = 3;
    public static final int INVITE_CODE_FIELD_NUMBER = 3;
    private boolean hasInviteCode;
    private java.lang.String inviteCode_ = "";
    public boolean hasInviteCode() { return hasInviteCode; }
    public java.lang.String getInviteCode() { return inviteCode_; }
    
    // optional int64 updated_date = 4;
    public static final int UPDATED_DATE_FIELD_NUMBER = 4;
    private boolean hasUpdatedDate;
    private long updatedDate_ = 0L;
    public boolean hasUpdatedDate() { return hasUpdatedDate; }
    public long getUpdatedDate() { return updatedDate_; }
    
    // repeated int64 playlist_id = 5;
    public static final int PLAYLIST_ID_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Long> playlistId_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Long> getPlaylistIdList() {
      return playlistId_;
    }
    public int getPlaylistIdCount() { return playlistId_.size(); }
    public long getPlaylistId(int index) {
      return playlistId_.get(index);
    }
    
    // repeated int64 friend_id = 6;
    public static final int FRIEND_ID_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Long> friendId_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Long> getFriendIdList() {
      return friendId_;
    }
    public int getFriendIdCount() { return friendId_.size(); }
    public long getFriendId(int index) {
      return friendId_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasInviteId) return false;
      if (!hasEmail) return false;
      if (!hasInviteCode) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasInviteId()) {
        output.writeInt64(1, getInviteId());
      }
      if (hasEmail()) {
        output.writeString(2, getEmail());
      }
      if (hasInviteCode()) {
        output.writeString(3, getInviteCode());
      }
      if (hasUpdatedDate()) {
        output.writeInt64(4, getUpdatedDate());
      }
      for (long element : getPlaylistIdList()) {
        output.writeInt64(5, element);
      }
      for (long element : getFriendIdList()) {
        output.writeInt64(6, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasInviteId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, getInviteId());
      }
      if (hasEmail()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getEmail());
      }
      if (hasInviteCode()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getInviteCode());
      }
      if (hasUpdatedDate()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, getUpdatedDate());
      }
      {
        int dataSize = 0;
        for (long element : getPlaylistIdList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getPlaylistIdList().size();
      }
      {
        int dataSize = 0;
        for (long element : getFriendIdList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getFriendIdList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.robonobo.core.api.proto.CoreApi.InviteMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.InviteMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.InviteMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.InviteMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.InviteMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.InviteMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.InviteMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.core.api.proto.CoreApi.InviteMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.core.api.proto.CoreApi.InviteMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.InviteMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.robonobo.core.api.proto.CoreApi.InviteMsg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.robonobo.core.api.proto.CoreApi.InviteMsg result;
      
      // Construct using com.robonobo.core.api.proto.CoreApi.InviteMsg.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.robonobo.core.api.proto.CoreApi.InviteMsg();
        return builder;
      }
      
      protected com.robonobo.core.api.proto.CoreApi.InviteMsg internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.robonobo.core.api.proto.CoreApi.InviteMsg();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.robonobo.core.api.proto.CoreApi.InviteMsg.getDescriptor();
      }
      
      public com.robonobo.core.api.proto.CoreApi.InviteMsg getDefaultInstanceForType() {
        return com.robonobo.core.api.proto.CoreApi.InviteMsg.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.robonobo.core.api.proto.CoreApi.InviteMsg build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.robonobo.core.api.proto.CoreApi.InviteMsg buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.robonobo.core.api.proto.CoreApi.InviteMsg buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.playlistId_ != java.util.Collections.EMPTY_LIST) {
          result.playlistId_ =
            java.util.Collections.unmodifiableList(result.playlistId_);
        }
        if (result.friendId_ != java.util.Collections.EMPTY_LIST) {
          result.friendId_ =
            java.util.Collections.unmodifiableList(result.friendId_);
        }
        com.robonobo.core.api.proto.CoreApi.InviteMsg returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.robonobo.core.api.proto.CoreApi.InviteMsg) {
          return mergeFrom((com.robonobo.core.api.proto.CoreApi.InviteMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.robonobo.core.api.proto.CoreApi.InviteMsg other) {
        if (other == com.robonobo.core.api.proto.CoreApi.InviteMsg.getDefaultInstance()) return this;
        if (other.hasInviteId()) {
          setInviteId(other.getInviteId());
        }
        if (other.hasEmail()) {
          setEmail(other.getEmail());
        }
        if (other.hasInviteCode()) {
          setInviteCode(other.getInviteCode());
        }
        if (other.hasUpdatedDate()) {
          setUpdatedDate(other.getUpdatedDate());
        }
        if (!other.playlistId_.isEmpty()) {
          if (result.playlistId_.isEmpty()) {
            result.playlistId_ = new java.util.ArrayList<java.lang.Long>();
          }
          result.playlistId_.addAll(other.playlistId_);
        }
        if (!other.friendId_.isEmpty()) {
          if (result.friendId_.isEmpty()) {
            result.friendId_ = new java.util.ArrayList<java.lang.Long>();
          }
          result.friendId_.addAll(other.friendId_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setInviteId(input.readInt64());
              break;
            }
            case 18: {
              setEmail(input.readString());
              break;
            }
            case 26: {
              setInviteCode(input.readString());
              break;
            }
            case 32: {
              setUpdatedDate(input.readInt64());
              break;
            }
            case 40: {
              addPlaylistId(input.readInt64());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addPlaylistId(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              addFriendId(input.readInt64());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addFriendId(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // required int64 invite_id = 1;
      public boolean hasInviteId() {
        return result.hasInviteId();
      }
      public long getInviteId() {
        return result.getInviteId();
      }
      public Builder setInviteId(long value) {
        result.hasInviteId = true;
        result.inviteId_ = value;
        return this;
      }
      public Builder clearInviteId() {
        result.hasInviteId = false;
        result.inviteId_ = 0L;
        return this;
      }
      
      // required string email = 2;
      public boolean hasEmail() {
        return result.hasEmail();
      }
      public java.lang.String getEmail() {
        return result.getEmail();
      }
      public Builder setEmail(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasEmail = true;
        result.email_ = value;
        return this;
      }
      public Builder clearEmail() {
        result.hasEmail = false;
        result.email_ = getDefaultInstance().getEmail();
        return this;
      }
      
      // required string invite_code = 3;
      public boolean hasInviteCode() {
        return result.hasInviteCode();
      }
      public java.lang.String getInviteCode() {
        return result.getInviteCode();
      }
      public Builder setInviteCode(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasInviteCode = true;
        result.inviteCode_ = value;
        return this;
      }
      public Builder clearInviteCode() {
        result.hasInviteCode = false;
        result.inviteCode_ = getDefaultInstance().getInviteCode();
        return this;
      }
      
      // optional int64 updated_date = 4;
      public boolean hasUpdatedDate() {
        return result.hasUpdatedDate();
      }
      public long getUpdatedDate() {
        return result.getUpdatedDate();
      }
      public Builder setUpdatedDate(long value) {
        result.hasUpdatedDate = true;
        result.updatedDate_ = value;
        return this;
      }
      public Builder clearUpdatedDate() {
        result.hasUpdatedDate = false;
        result.updatedDate_ = 0L;
        return this;
      }
      
      // repeated int64 playlist_id = 5;
      public java.util.List<java.lang.Long> getPlaylistIdList() {
        return java.util.Collections.unmodifiableList(result.playlistId_);
      }
      public int getPlaylistIdCount() {
        return result.getPlaylistIdCount();
      }
      public long getPlaylistId(int index) {
        return result.getPlaylistId(index);
      }
      public Builder setPlaylistId(int index, long value) {
        result.playlistId_.set(index, value);
        return this;
      }
      public Builder addPlaylistId(long value) {
        if (result.playlistId_.isEmpty()) {
          result.playlistId_ = new java.util.ArrayList<java.lang.Long>();
        }
        result.playlistId_.add(value);
        return this;
      }
      public Builder addAllPlaylistId(
          java.lang.Iterable<? extends java.lang.Long> values) {
        if (result.playlistId_.isEmpty()) {
          result.playlistId_ = new java.util.ArrayList<java.lang.Long>();
        }
        super.addAll(values, result.playlistId_);
        return this;
      }
      public Builder clearPlaylistId() {
        result.playlistId_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated int64 friend_id = 6;
      public java.util.List<java.lang.Long> getFriendIdList() {
        return java.util.Collections.unmodifiableList(result.friendId_);
      }
      public int getFriendIdCount() {
        return result.getFriendIdCount();
      }
      public long getFriendId(int index) {
        return result.getFriendId(index);
      }
      public Builder setFriendId(int index, long value) {
        result.friendId_.set(index, value);
        return this;
      }
      public Builder addFriendId(long value) {
        if (result.friendId_.isEmpty()) {
          result.friendId_ = new java.util.ArrayList<java.lang.Long>();
        }
        result.friendId_.add(value);
        return this;
      }
      public Builder addAllFriendId(
          java.lang.Iterable<? extends java.lang.Long> values) {
        if (result.friendId_.isEmpty()) {
          result.friendId_ = new java.util.ArrayList<java.lang.Long>();
        }
        super.addAll(values, result.friendId_);
        return this;
      }
      public Builder clearFriendId() {
        result.friendId_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:coreapi.InviteMsg)
    }
    
    static {
      defaultInstance = new InviteMsg(true);
      com.robonobo.core.api.proto.CoreApi.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:coreapi.InviteMsg)
  }
  
  public static final class FriendRequestMsg extends
      com.google.protobuf.GeneratedMessage {
    // Use FriendRequestMsg.newBuilder() to construct.
    private FriendRequestMsg() {
      initFields();
    }
    private FriendRequestMsg(boolean noInit) {}
    
    private static final FriendRequestMsg defaultInstance;
    public static FriendRequestMsg getDefaultInstance() {
      return defaultInstance;
    }
    
    public FriendRequestMsg getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.robonobo.core.api.proto.CoreApi.internal_static_coreapi_FriendRequestMsg_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.robonobo.core.api.proto.CoreApi.internal_static_coreapi_FriendRequestMsg_fieldAccessorTable;
    }
    
    // required int64 friend_request_id = 1;
    public static final int FRIEND_REQUEST_ID_FIELD_NUMBER = 1;
    private boolean hasFriendRequestId;
    private long friendRequestId_ = 0L;
    public boolean hasFriendRequestId() { return hasFriendRequestId; }
    public long getFriendRequestId() { return friendRequestId_; }
    
    // required int64 requestor_id = 2;
    public static final int REQUESTOR_ID_FIELD_NUMBER = 2;
    private boolean hasRequestorId;
    private long requestorId_ = 0L;
    public boolean hasRequestorId() { return hasRequestorId; }
    public long getRequestorId() { return requestorId_; }
    
    // required int64 requestee_id = 3;
    public static final int REQUESTEE_ID_FIELD_NUMBER = 3;
    private boolean hasRequesteeId;
    private long requesteeId_ = 0L;
    public boolean hasRequesteeId() { return hasRequesteeId; }
    public long getRequesteeId() { return requesteeId_; }
    
    // required string request_code = 4;
    public static final int REQUEST_CODE_FIELD_NUMBER = 4;
    private boolean hasRequestCode;
    private java.lang.String requestCode_ = "";
    public boolean hasRequestCode() { return hasRequestCode; }
    public java.lang.String getRequestCode() { return requestCode_; }
    
    // optional int64 updated_date = 5;
    public static final int UPDATED_DATE_FIELD_NUMBER = 5;
    private boolean hasUpdatedDate;
    private long updatedDate_ = 0L;
    public boolean hasUpdatedDate() { return hasUpdatedDate; }
    public long getUpdatedDate() { return updatedDate_; }
    
    // repeated int64 playlist_id = 6;
    public static final int PLAYLIST_ID_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Long> playlistId_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Long> getPlaylistIdList() {
      return playlistId_;
    }
    public int getPlaylistIdCount() { return playlistId_.size(); }
    public long getPlaylistId(int index) {
      return playlistId_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasFriendRequestId) return false;
      if (!hasRequestorId) return false;
      if (!hasRequesteeId) return false;
      if (!hasRequestCode) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasFriendRequestId()) {
        output.writeInt64(1, getFriendRequestId());
      }
      if (hasRequestorId()) {
        output.writeInt64(2, getRequestorId());
      }
      if (hasRequesteeId()) {
        output.writeInt64(3, getRequesteeId());
      }
      if (hasRequestCode()) {
        output.writeString(4, getRequestCode());
      }
      if (hasUpdatedDate()) {
        output.writeInt64(5, getUpdatedDate());
      }
      for (long element : getPlaylistIdList()) {
        output.writeInt64(6, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasFriendRequestId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, getFriendRequestId());
      }
      if (hasRequestorId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, getRequestorId());
      }
      if (hasRequesteeId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, getRequesteeId());
      }
      if (hasRequestCode()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getRequestCode());
      }
      if (hasUpdatedDate()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, getUpdatedDate());
      }
      {
        int dataSize = 0;
        for (long element : getPlaylistIdList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getPlaylistIdList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.robonobo.core.api.proto.CoreApi.FriendRequestMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.FriendRequestMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.FriendRequestMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.FriendRequestMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.FriendRequestMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.FriendRequestMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.FriendRequestMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.core.api.proto.CoreApi.FriendRequestMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.core.api.proto.CoreApi.FriendRequestMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.FriendRequestMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.robonobo.core.api.proto.CoreApi.FriendRequestMsg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.robonobo.core.api.proto.CoreApi.FriendRequestMsg result;
      
      // Construct using com.robonobo.core.api.proto.CoreApi.FriendRequestMsg.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.robonobo.core.api.proto.CoreApi.FriendRequestMsg();
        return builder;
      }
      
      protected com.robonobo.core.api.proto.CoreApi.FriendRequestMsg internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.robonobo.core.api.proto.CoreApi.FriendRequestMsg();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.robonobo.core.api.proto.CoreApi.FriendRequestMsg.getDescriptor();
      }
      
      public com.robonobo.core.api.proto.CoreApi.FriendRequestMsg getDefaultInstanceForType() {
        return com.robonobo.core.api.proto.CoreApi.FriendRequestMsg.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.robonobo.core.api.proto.CoreApi.FriendRequestMsg build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.robonobo.core.api.proto.CoreApi.FriendRequestMsg buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.robonobo.core.api.proto.CoreApi.FriendRequestMsg buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.playlistId_ != java.util.Collections.EMPTY_LIST) {
          result.playlistId_ =
            java.util.Collections.unmodifiableList(result.playlistId_);
        }
        com.robonobo.core.api.proto.CoreApi.FriendRequestMsg returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.robonobo.core.api.proto.CoreApi.FriendRequestMsg) {
          return mergeFrom((com.robonobo.core.api.proto.CoreApi.FriendRequestMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.robonobo.core.api.proto.CoreApi.FriendRequestMsg other) {
        if (other == com.robonobo.core.api.proto.CoreApi.FriendRequestMsg.getDefaultInstance()) return this;
        if (other.hasFriendRequestId()) {
          setFriendRequestId(other.getFriendRequestId());
        }
        if (other.hasRequestorId()) {
          setRequestorId(other.getRequestorId());
        }
        if (other.hasRequesteeId()) {
          setRequesteeId(other.getRequesteeId());
        }
        if (other.hasRequestCode()) {
          setRequestCode(other.getRequestCode());
        }
        if (other.hasUpdatedDate()) {
          setUpdatedDate(other.getUpdatedDate());
        }
        if (!other.playlistId_.isEmpty()) {
          if (result.playlistId_.isEmpty()) {
            result.playlistId_ = new java.util.ArrayList<java.lang.Long>();
          }
          result.playlistId_.addAll(other.playlistId_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setFriendRequestId(input.readInt64());
              break;
            }
            case 16: {
              setRequestorId(input.readInt64());
              break;
            }
            case 24: {
              setRequesteeId(input.readInt64());
              break;
            }
            case 34: {
              setRequestCode(input.readString());
              break;
            }
            case 40: {
              setUpdatedDate(input.readInt64());
              break;
            }
            case 48: {
              addPlaylistId(input.readInt64());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addPlaylistId(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // required int64 friend_request_id = 1;
      public boolean hasFriendRequestId() {
        return result.hasFriendRequestId();
      }
      public long getFriendRequestId() {
        return result.getFriendRequestId();
      }
      public Builder setFriendRequestId(long value) {
        result.hasFriendRequestId = true;
        result.friendRequestId_ = value;
        return this;
      }
      public Builder clearFriendRequestId() {
        result.hasFriendRequestId = false;
        result.friendRequestId_ = 0L;
        return this;
      }
      
      // required int64 requestor_id = 2;
      public boolean hasRequestorId() {
        return result.hasRequestorId();
      }
      public long getRequestorId() {
        return result.getRequestorId();
      }
      public Builder setRequestorId(long value) {
        result.hasRequestorId = true;
        result.requestorId_ = value;
        return this;
      }
      public Builder clearRequestorId() {
        result.hasRequestorId = false;
        result.requestorId_ = 0L;
        return this;
      }
      
      // required int64 requestee_id = 3;
      public boolean hasRequesteeId() {
        return result.hasRequesteeId();
      }
      public long getRequesteeId() {
        return result.getRequesteeId();
      }
      public Builder setRequesteeId(long value) {
        result.hasRequesteeId = true;
        result.requesteeId_ = value;
        return this;
      }
      public Builder clearRequesteeId() {
        result.hasRequesteeId = false;
        result.requesteeId_ = 0L;
        return this;
      }
      
      // required string request_code = 4;
      public boolean hasRequestCode() {
        return result.hasRequestCode();
      }
      public java.lang.String getRequestCode() {
        return result.getRequestCode();
      }
      public Builder setRequestCode(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasRequestCode = true;
        result.requestCode_ = value;
        return this;
      }
      public Builder clearRequestCode() {
        result.hasRequestCode = false;
        result.requestCode_ = getDefaultInstance().getRequestCode();
        return this;
      }
      
      // optional int64 updated_date = 5;
      public boolean hasUpdatedDate() {
        return result.hasUpdatedDate();
      }
      public long getUpdatedDate() {
        return result.getUpdatedDate();
      }
      public Builder setUpdatedDate(long value) {
        result.hasUpdatedDate = true;
        result.updatedDate_ = value;
        return this;
      }
      public Builder clearUpdatedDate() {
        result.hasUpdatedDate = false;
        result.updatedDate_ = 0L;
        return this;
      }
      
      // repeated int64 playlist_id = 6;
      public java.util.List<java.lang.Long> getPlaylistIdList() {
        return java.util.Collections.unmodifiableList(result.playlistId_);
      }
      public int getPlaylistIdCount() {
        return result.getPlaylistIdCount();
      }
      public long getPlaylistId(int index) {
        return result.getPlaylistId(index);
      }
      public Builder setPlaylistId(int index, long value) {
        result.playlistId_.set(index, value);
        return this;
      }
      public Builder addPlaylistId(long value) {
        if (result.playlistId_.isEmpty()) {
          result.playlistId_ = new java.util.ArrayList<java.lang.Long>();
        }
        result.playlistId_.add(value);
        return this;
      }
      public Builder addAllPlaylistId(
          java.lang.Iterable<? extends java.lang.Long> values) {
        if (result.playlistId_.isEmpty()) {
          result.playlistId_ = new java.util.ArrayList<java.lang.Long>();
        }
        super.addAll(values, result.playlistId_);
        return this;
      }
      public Builder clearPlaylistId() {
        result.playlistId_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:coreapi.FriendRequestMsg)
    }
    
    static {
      defaultInstance = new FriendRequestMsg(true);
      com.robonobo.core.api.proto.CoreApi.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:coreapi.FriendRequestMsg)
  }
  
  public static final class SearchResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use SearchResponse.newBuilder() to construct.
    private SearchResponse() {
      initFields();
    }
    private SearchResponse(boolean noInit) {}
    
    private static final SearchResponse defaultInstance;
    public static SearchResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public SearchResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.robonobo.core.api.proto.CoreApi.internal_static_coreapi_SearchResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.robonobo.core.api.proto.CoreApi.internal_static_coreapi_SearchResponse_fieldAccessorTable;
    }
    
    // required int32 firstResult = 1;
    public static final int FIRSTRESULT_FIELD_NUMBER = 1;
    private boolean hasFirstResult;
    private int firstResult_ = 0;
    public boolean hasFirstResult() { return hasFirstResult; }
    public int getFirstResult() { return firstResult_; }
    
    // required int32 totalResults = 2;
    public static final int TOTALRESULTS_FIELD_NUMBER = 2;
    private boolean hasTotalResults;
    private int totalResults_ = 0;
    public boolean hasTotalResults() { return hasTotalResults; }
    public int getTotalResults() { return totalResults_; }
    
    // repeated string object_id = 3;
    public static final int OBJECT_ID_FIELD_NUMBER = 3;
    private java.util.List<java.lang.String> objectId_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getObjectIdList() {
      return objectId_;
    }
    public int getObjectIdCount() { return objectId_.size(); }
    public java.lang.String getObjectId(int index) {
      return objectId_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasFirstResult) return false;
      if (!hasTotalResults) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasFirstResult()) {
        output.writeInt32(1, getFirstResult());
      }
      if (hasTotalResults()) {
        output.writeInt32(2, getTotalResults());
      }
      for (java.lang.String element : getObjectIdList()) {
        output.writeString(3, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasFirstResult()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getFirstResult());
      }
      if (hasTotalResults()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getTotalResults());
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getObjectIdList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getObjectIdList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.robonobo.core.api.proto.CoreApi.SearchResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.SearchResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.SearchResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.SearchResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.SearchResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.SearchResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.SearchResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.core.api.proto.CoreApi.SearchResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.core.api.proto.CoreApi.SearchResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.SearchResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.robonobo.core.api.proto.CoreApi.SearchResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.robonobo.core.api.proto.CoreApi.SearchResponse result;
      
      // Construct using com.robonobo.core.api.proto.CoreApi.SearchResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.robonobo.core.api.proto.CoreApi.SearchResponse();
        return builder;
      }
      
      protected com.robonobo.core.api.proto.CoreApi.SearchResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.robonobo.core.api.proto.CoreApi.SearchResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.robonobo.core.api.proto.CoreApi.SearchResponse.getDescriptor();
      }
      
      public com.robonobo.core.api.proto.CoreApi.SearchResponse getDefaultInstanceForType() {
        return com.robonobo.core.api.proto.CoreApi.SearchResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.robonobo.core.api.proto.CoreApi.SearchResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.robonobo.core.api.proto.CoreApi.SearchResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.robonobo.core.api.proto.CoreApi.SearchResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.objectId_ != java.util.Collections.EMPTY_LIST) {
          result.objectId_ =
            java.util.Collections.unmodifiableList(result.objectId_);
        }
        com.robonobo.core.api.proto.CoreApi.SearchResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.robonobo.core.api.proto.CoreApi.SearchResponse) {
          return mergeFrom((com.robonobo.core.api.proto.CoreApi.SearchResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.robonobo.core.api.proto.CoreApi.SearchResponse other) {
        if (other == com.robonobo.core.api.proto.CoreApi.SearchResponse.getDefaultInstance()) return this;
        if (other.hasFirstResult()) {
          setFirstResult(other.getFirstResult());
        }
        if (other.hasTotalResults()) {
          setTotalResults(other.getTotalResults());
        }
        if (!other.objectId_.isEmpty()) {
          if (result.objectId_.isEmpty()) {
            result.objectId_ = new java.util.ArrayList<java.lang.String>();
          }
          result.objectId_.addAll(other.objectId_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setFirstResult(input.readInt32());
              break;
            }
            case 16: {
              setTotalResults(input.readInt32());
              break;
            }
            case 26: {
              addObjectId(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required int32 firstResult = 1;
      public boolean hasFirstResult() {
        return result.hasFirstResult();
      }
      public int getFirstResult() {
        return result.getFirstResult();
      }
      public Builder setFirstResult(int value) {
        result.hasFirstResult = true;
        result.firstResult_ = value;
        return this;
      }
      public Builder clearFirstResult() {
        result.hasFirstResult = false;
        result.firstResult_ = 0;
        return this;
      }
      
      // required int32 totalResults = 2;
      public boolean hasTotalResults() {
        return result.hasTotalResults();
      }
      public int getTotalResults() {
        return result.getTotalResults();
      }
      public Builder setTotalResults(int value) {
        result.hasTotalResults = true;
        result.totalResults_ = value;
        return this;
      }
      public Builder clearTotalResults() {
        result.hasTotalResults = false;
        result.totalResults_ = 0;
        return this;
      }
      
      // repeated string object_id = 3;
      public java.util.List<java.lang.String> getObjectIdList() {
        return java.util.Collections.unmodifiableList(result.objectId_);
      }
      public int getObjectIdCount() {
        return result.getObjectIdCount();
      }
      public java.lang.String getObjectId(int index) {
        return result.getObjectId(index);
      }
      public Builder setObjectId(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.objectId_.set(index, value);
        return this;
      }
      public Builder addObjectId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.objectId_.isEmpty()) {
          result.objectId_ = new java.util.ArrayList<java.lang.String>();
        }
        result.objectId_.add(value);
        return this;
      }
      public Builder addAllObjectId(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.objectId_.isEmpty()) {
          result.objectId_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.objectId_);
        return this;
      }
      public Builder clearObjectId() {
        result.objectId_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:coreapi.SearchResponse)
    }
    
    static {
      defaultInstance = new SearchResponse(true);
      com.robonobo.core.api.proto.CoreApi.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:coreapi.SearchResponse)
  }
  
  public static final class UserConfigItem extends
      com.google.protobuf.GeneratedMessage {
    // Use UserConfigItem.newBuilder() to construct.
    private UserConfigItem() {
      initFields();
    }
    private UserConfigItem(boolean noInit) {}
    
    private static final UserConfigItem defaultInstance;
    public static UserConfigItem getDefaultInstance() {
      return defaultInstance;
    }
    
    public UserConfigItem getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.robonobo.core.api.proto.CoreApi.internal_static_coreapi_UserConfigItem_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.robonobo.core.api.proto.CoreApi.internal_static_coreapi_UserConfigItem_fieldAccessorTable;
    }
    
    // required string item_name = 1;
    public static final int ITEM_NAME_FIELD_NUMBER = 1;
    private boolean hasItemName;
    private java.lang.String itemName_ = "";
    public boolean hasItemName() { return hasItemName; }
    public java.lang.String getItemName() { return itemName_; }
    
    // required string item_value = 2;
    public static final int ITEM_VALUE_FIELD_NUMBER = 2;
    private boolean hasItemValue;
    private java.lang.String itemValue_ = "";
    public boolean hasItemValue() { return hasItemValue; }
    public java.lang.String getItemValue() { return itemValue_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasItemName) return false;
      if (!hasItemValue) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasItemName()) {
        output.writeString(1, getItemName());
      }
      if (hasItemValue()) {
        output.writeString(2, getItemValue());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasItemName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getItemName());
      }
      if (hasItemValue()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getItemValue());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.robonobo.core.api.proto.CoreApi.UserConfigItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.UserConfigItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.UserConfigItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.UserConfigItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.UserConfigItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.UserConfigItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.UserConfigItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.core.api.proto.CoreApi.UserConfigItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.core.api.proto.CoreApi.UserConfigItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.UserConfigItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.robonobo.core.api.proto.CoreApi.UserConfigItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.robonobo.core.api.proto.CoreApi.UserConfigItem result;
      
      // Construct using com.robonobo.core.api.proto.CoreApi.UserConfigItem.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.robonobo.core.api.proto.CoreApi.UserConfigItem();
        return builder;
      }
      
      protected com.robonobo.core.api.proto.CoreApi.UserConfigItem internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.robonobo.core.api.proto.CoreApi.UserConfigItem();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.robonobo.core.api.proto.CoreApi.UserConfigItem.getDescriptor();
      }
      
      public com.robonobo.core.api.proto.CoreApi.UserConfigItem getDefaultInstanceForType() {
        return com.robonobo.core.api.proto.CoreApi.UserConfigItem.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.robonobo.core.api.proto.CoreApi.UserConfigItem build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.robonobo.core.api.proto.CoreApi.UserConfigItem buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.robonobo.core.api.proto.CoreApi.UserConfigItem buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.robonobo.core.api.proto.CoreApi.UserConfigItem returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.robonobo.core.api.proto.CoreApi.UserConfigItem) {
          return mergeFrom((com.robonobo.core.api.proto.CoreApi.UserConfigItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.robonobo.core.api.proto.CoreApi.UserConfigItem other) {
        if (other == com.robonobo.core.api.proto.CoreApi.UserConfigItem.getDefaultInstance()) return this;
        if (other.hasItemName()) {
          setItemName(other.getItemName());
        }
        if (other.hasItemValue()) {
          setItemValue(other.getItemValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setItemName(input.readString());
              break;
            }
            case 18: {
              setItemValue(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string item_name = 1;
      public boolean hasItemName() {
        return result.hasItemName();
      }
      public java.lang.String getItemName() {
        return result.getItemName();
      }
      public Builder setItemName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasItemName = true;
        result.itemName_ = value;
        return this;
      }
      public Builder clearItemName() {
        result.hasItemName = false;
        result.itemName_ = getDefaultInstance().getItemName();
        return this;
      }
      
      // required string item_value = 2;
      public boolean hasItemValue() {
        return result.hasItemValue();
      }
      public java.lang.String getItemValue() {
        return result.getItemValue();
      }
      public Builder setItemValue(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasItemValue = true;
        result.itemValue_ = value;
        return this;
      }
      public Builder clearItemValue() {
        result.hasItemValue = false;
        result.itemValue_ = getDefaultInstance().getItemValue();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:coreapi.UserConfigItem)
    }
    
    static {
      defaultInstance = new UserConfigItem(true);
      com.robonobo.core.api.proto.CoreApi.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:coreapi.UserConfigItem)
  }
  
  public static final class UserConfigMsg extends
      com.google.protobuf.GeneratedMessage {
    // Use UserConfigMsg.newBuilder() to construct.
    private UserConfigMsg() {
      initFields();
    }
    private UserConfigMsg(boolean noInit) {}
    
    private static final UserConfigMsg defaultInstance;
    public static UserConfigMsg getDefaultInstance() {
      return defaultInstance;
    }
    
    public UserConfigMsg getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.robonobo.core.api.proto.CoreApi.internal_static_coreapi_UserConfigMsg_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.robonobo.core.api.proto.CoreApi.internal_static_coreapi_UserConfigMsg_fieldAccessorTable;
    }
    
    // required int64 user_id = 1;
    public static final int USER_ID_FIELD_NUMBER = 1;
    private boolean hasUserId;
    private long userId_ = 0L;
    public boolean hasUserId() { return hasUserId; }
    public long getUserId() { return userId_; }
    
    // repeated .coreapi.UserConfigItem item = 2;
    public static final int ITEM_FIELD_NUMBER = 2;
    private java.util.List<com.robonobo.core.api.proto.CoreApi.UserConfigItem> item_ =
      java.util.Collections.emptyList();
    public java.util.List<com.robonobo.core.api.proto.CoreApi.UserConfigItem> getItemList() {
      return item_;
    }
    public int getItemCount() { return item_.size(); }
    public com.robonobo.core.api.proto.CoreApi.UserConfigItem getItem(int index) {
      return item_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasUserId) return false;
      for (com.robonobo.core.api.proto.CoreApi.UserConfigItem element : getItemList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasUserId()) {
        output.writeInt64(1, getUserId());
      }
      for (com.robonobo.core.api.proto.CoreApi.UserConfigItem element : getItemList()) {
        output.writeMessage(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasUserId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, getUserId());
      }
      for (com.robonobo.core.api.proto.CoreApi.UserConfigItem element : getItemList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.robonobo.core.api.proto.CoreApi.UserConfigMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.UserConfigMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.UserConfigMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.UserConfigMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.UserConfigMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.UserConfigMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.UserConfigMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.core.api.proto.CoreApi.UserConfigMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.core.api.proto.CoreApi.UserConfigMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.UserConfigMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.robonobo.core.api.proto.CoreApi.UserConfigMsg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.robonobo.core.api.proto.CoreApi.UserConfigMsg result;
      
      // Construct using com.robonobo.core.api.proto.CoreApi.UserConfigMsg.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.robonobo.core.api.proto.CoreApi.UserConfigMsg();
        return builder;
      }
      
      protected com.robonobo.core.api.proto.CoreApi.UserConfigMsg internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.robonobo.core.api.proto.CoreApi.UserConfigMsg();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.robonobo.core.api.proto.CoreApi.UserConfigMsg.getDescriptor();
      }
      
      public com.robonobo.core.api.proto.CoreApi.UserConfigMsg getDefaultInstanceForType() {
        return com.robonobo.core.api.proto.CoreApi.UserConfigMsg.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.robonobo.core.api.proto.CoreApi.UserConfigMsg build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.robonobo.core.api.proto.CoreApi.UserConfigMsg buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.robonobo.core.api.proto.CoreApi.UserConfigMsg buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.item_ != java.util.Collections.EMPTY_LIST) {
          result.item_ =
            java.util.Collections.unmodifiableList(result.item_);
        }
        com.robonobo.core.api.proto.CoreApi.UserConfigMsg returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.robonobo.core.api.proto.CoreApi.UserConfigMsg) {
          return mergeFrom((com.robonobo.core.api.proto.CoreApi.UserConfigMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.robonobo.core.api.proto.CoreApi.UserConfigMsg other) {
        if (other == com.robonobo.core.api.proto.CoreApi.UserConfigMsg.getDefaultInstance()) return this;
        if (other.hasUserId()) {
          setUserId(other.getUserId());
        }
        if (!other.item_.isEmpty()) {
          if (result.item_.isEmpty()) {
            result.item_ = new java.util.ArrayList<com.robonobo.core.api.proto.CoreApi.UserConfigItem>();
          }
          result.item_.addAll(other.item_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setUserId(input.readInt64());
              break;
            }
            case 18: {
              com.robonobo.core.api.proto.CoreApi.UserConfigItem.Builder subBuilder = com.robonobo.core.api.proto.CoreApi.UserConfigItem.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addItem(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required int64 user_id = 1;
      public boolean hasUserId() {
        return result.hasUserId();
      }
      public long getUserId() {
        return result.getUserId();
      }
      public Builder setUserId(long value) {
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder clearUserId() {
        result.hasUserId = false;
        result.userId_ = 0L;
        return this;
      }
      
      // repeated .coreapi.UserConfigItem item = 2;
      public java.util.List<com.robonobo.core.api.proto.CoreApi.UserConfigItem> getItemList() {
        return java.util.Collections.unmodifiableList(result.item_);
      }
      public int getItemCount() {
        return result.getItemCount();
      }
      public com.robonobo.core.api.proto.CoreApi.UserConfigItem getItem(int index) {
        return result.getItem(index);
      }
      public Builder setItem(int index, com.robonobo.core.api.proto.CoreApi.UserConfigItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.item_.set(index, value);
        return this;
      }
      public Builder setItem(int index, com.robonobo.core.api.proto.CoreApi.UserConfigItem.Builder builderForValue) {
        result.item_.set(index, builderForValue.build());
        return this;
      }
      public Builder addItem(com.robonobo.core.api.proto.CoreApi.UserConfigItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.item_.isEmpty()) {
          result.item_ = new java.util.ArrayList<com.robonobo.core.api.proto.CoreApi.UserConfigItem>();
        }
        result.item_.add(value);
        return this;
      }
      public Builder addItem(com.robonobo.core.api.proto.CoreApi.UserConfigItem.Builder builderForValue) {
        if (result.item_.isEmpty()) {
          result.item_ = new java.util.ArrayList<com.robonobo.core.api.proto.CoreApi.UserConfigItem>();
        }
        result.item_.add(builderForValue.build());
        return this;
      }
      public Builder addAllItem(
          java.lang.Iterable<? extends com.robonobo.core.api.proto.CoreApi.UserConfigItem> values) {
        if (result.item_.isEmpty()) {
          result.item_ = new java.util.ArrayList<com.robonobo.core.api.proto.CoreApi.UserConfigItem>();
        }
        super.addAll(values, result.item_);
        return this;
      }
      public Builder clearItem() {
        result.item_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:coreapi.UserConfigMsg)
    }
    
    static {
      defaultInstance = new UserConfigMsg(true);
      com.robonobo.core.api.proto.CoreApi.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:coreapi.UserConfigMsg)
  }
  
  public static final class UpdateMsg extends
      com.google.protobuf.GeneratedMessage {
    // Use UpdateMsg.newBuilder() to construct.
    private UpdateMsg() {
      initFields();
    }
    private UpdateMsg(boolean noInit) {}
    
    private static final UpdateMsg defaultInstance;
    public static UpdateMsg getDefaultInstance() {
      return defaultInstance;
    }
    
    public UpdateMsg getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.robonobo.core.api.proto.CoreApi.internal_static_coreapi_UpdateMsg_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.robonobo.core.api.proto.CoreApi.internal_static_coreapi_UpdateMsg_fieldAccessorTable;
    }
    
    // required string updateHtml = 1;
    public static final int UPDATEHTML_FIELD_NUMBER = 1;
    private boolean hasUpdateHtml;
    private java.lang.String updateHtml_ = "";
    public boolean hasUpdateHtml() { return hasUpdateHtml; }
    public java.lang.String getUpdateHtml() { return updateHtml_; }
    
    // optional string updateTitle = 2;
    public static final int UPDATETITLE_FIELD_NUMBER = 2;
    private boolean hasUpdateTitle;
    private java.lang.String updateTitle_ = "";
    public boolean hasUpdateTitle() { return hasUpdateTitle; }
    public java.lang.String getUpdateTitle() { return updateTitle_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasUpdateHtml) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasUpdateHtml()) {
        output.writeString(1, getUpdateHtml());
      }
      if (hasUpdateTitle()) {
        output.writeString(2, getUpdateTitle());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasUpdateHtml()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getUpdateHtml());
      }
      if (hasUpdateTitle()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getUpdateTitle());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.robonobo.core.api.proto.CoreApi.UpdateMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.UpdateMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.UpdateMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.UpdateMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.UpdateMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.UpdateMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.UpdateMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.core.api.proto.CoreApi.UpdateMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.robonobo.core.api.proto.CoreApi.UpdateMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.robonobo.core.api.proto.CoreApi.UpdateMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.robonobo.core.api.proto.CoreApi.UpdateMsg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.robonobo.core.api.proto.CoreApi.UpdateMsg result;
      
      // Construct using com.robonobo.core.api.proto.CoreApi.UpdateMsg.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.robonobo.core.api.proto.CoreApi.UpdateMsg();
        return builder;
      }
      
      protected com.robonobo.core.api.proto.CoreApi.UpdateMsg internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.robonobo.core.api.proto.CoreApi.UpdateMsg();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.robonobo.core.api.proto.CoreApi.UpdateMsg.getDescriptor();
      }
      
      public com.robonobo.core.api.proto.CoreApi.UpdateMsg getDefaultInstanceForType() {
        return com.robonobo.core.api.proto.CoreApi.UpdateMsg.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.robonobo.core.api.proto.CoreApi.UpdateMsg build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.robonobo.core.api.proto.CoreApi.UpdateMsg buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.robonobo.core.api.proto.CoreApi.UpdateMsg buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.robonobo.core.api.proto.CoreApi.UpdateMsg returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.robonobo.core.api.proto.CoreApi.UpdateMsg) {
          return mergeFrom((com.robonobo.core.api.proto.CoreApi.UpdateMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.robonobo.core.api.proto.CoreApi.UpdateMsg other) {
        if (other == com.robonobo.core.api.proto.CoreApi.UpdateMsg.getDefaultInstance()) return this;
        if (other.hasUpdateHtml()) {
          setUpdateHtml(other.getUpdateHtml());
        }
        if (other.hasUpdateTitle()) {
          setUpdateTitle(other.getUpdateTitle());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setUpdateHtml(input.readString());
              break;
            }
            case 18: {
              setUpdateTitle(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string updateHtml = 1;
      public boolean hasUpdateHtml() {
        return result.hasUpdateHtml();
      }
      public java.lang.String getUpdateHtml() {
        return result.getUpdateHtml();
      }
      public Builder setUpdateHtml(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasUpdateHtml = true;
        result.updateHtml_ = value;
        return this;
      }
      public Builder clearUpdateHtml() {
        result.hasUpdateHtml = false;
        result.updateHtml_ = getDefaultInstance().getUpdateHtml();
        return this;
      }
      
      // optional string updateTitle = 2;
      public boolean hasUpdateTitle() {
        return result.hasUpdateTitle();
      }
      public java.lang.String getUpdateTitle() {
        return result.getUpdateTitle();
      }
      public Builder setUpdateTitle(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasUpdateTitle = true;
        result.updateTitle_ = value;
        return this;
      }
      public Builder clearUpdateTitle() {
        result.hasUpdateTitle = false;
        result.updateTitle_ = getDefaultInstance().getUpdateTitle();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:coreapi.UpdateMsg)
    }
    
    static {
      defaultInstance = new UpdateMsg(true);
      com.robonobo.core.api.proto.CoreApi.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:coreapi.UpdateMsg)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_coreapi_EndPoint_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_coreapi_EndPoint_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_coreapi_Node_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_coreapi_Node_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_coreapi_NodeList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_coreapi_NodeList_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_coreapi_StreamAttributeMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_coreapi_StreamAttributeMsg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_coreapi_StreamMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_coreapi_StreamMsg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_coreapi_UserMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_coreapi_UserMsg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_coreapi_PlaylistMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_coreapi_PlaylistMsg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_coreapi_LibraryTrackMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_coreapi_LibraryTrackMsg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_coreapi_LibraryMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_coreapi_LibraryMsg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_coreapi_InviteMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_coreapi_InviteMsg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_coreapi_FriendRequestMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_coreapi_FriendRequestMsg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_coreapi_SearchResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_coreapi_SearchResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_coreapi_UserConfigItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_coreapi_UserConfigItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_coreapi_UserConfigMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_coreapi_UserConfigMsg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_coreapi_UpdateMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_coreapi_UpdateMsg_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n6api/src/java/com/robonobo/core/api/pro" +
      "to/coreapi.proto\022\007coreapi\"\027\n\010EndPoint\022\013\n" +
      "\003url\030\001 \002(\t\"\215\001\n\004Node\022\n\n\002id\030\001 \002(\t\022\027\n\017appli" +
      "cation_uri\030\002 \002(\t\022\030\n\020protocol_version\030\003 \002" +
      "(\005\022\021\n\tsupernode\030\004 \001(\010\022\r\n\005local\030\005 \001(\010\022$\n\t" +
      "end_point\030\006 \003(\0132\021.coreapi.EndPoint\"\'\n\010No" +
      "deList\022\033\n\004node\030\001 \003(\0132\r.coreapi.Node\"1\n\022S" +
      "treamAttributeMsg\022\014\n\004name\030\001 \002(\t\022\r\n\005value" +
      "\030\002 \002(\t\"\236\001\n\tStreamMsg\022\n\n\002id\030\001 \002(\t\022\021\n\tmime" +
      "_type\030\002 \002(\t\022\r\n\005title\030\003 \002(\t\022\014\n\004size\030\004 \002(\003",
      "\022\023\n\013description\030\005 \001(\t\022\020\n\010duration\030\006 \001(\003\022" +
      ".\n\tattribute\030\007 \003(\0132\033.coreapi.StreamAttri" +
      "buteMsg\"\311\001\n\007UserMsg\022\n\n\002id\030\001 \002(\003\022\r\n\005email" +
      "\030\002 \002(\t\022\025\n\rfriendly_name\030\003 \002(\t\022\024\n\014invites" +
      "_left\030\004 \001(\005\022\020\n\010password\030\005 \001(\t\022\023\n\013descrip" +
      "tion\030\006 \001(\t\022\021\n\timage_url\030\007 \001(\t\022\024\n\014updated" +
      "_date\030\010 \001(\003\022\021\n\tfriend_id\030\t \003(\003\022\023\n\013playli" +
      "st_id\030\n \003(\003\"\214\001\n\013PlaylistMsg\022\n\n\002id\030\001 \002(\003\022" +
      "\r\n\005title\030\002 \002(\t\022\022\n\nvisibility\030\003 \002(\t\022\024\n\014up" +
      "dated_date\030\004 \001(\003\022\023\n\013description\030\005 \001(\t\022\021\n",
      "\tstream_id\030\006 \003(\t\022\020\n\010owner_id\030\007 \003(\003\"8\n\017Li" +
      "braryTrackMsg\022\021\n\tstream_id\030\001 \002(\t\022\022\n\nadde" +
      "d_date\030\002 \001(\003\"F\n\nLibraryMsg\022\017\n\007user_id\030\001 " +
      "\001(\003\022\'\n\005track\030\002 \003(\0132\030.coreapi.LibraryTrac" +
      "kMsg\"\200\001\n\tInviteMsg\022\021\n\tinvite_id\030\001 \002(\003\022\r\n" +
      "\005email\030\002 \002(\t\022\023\n\013invite_code\030\003 \002(\t\022\024\n\014upd" +
      "ated_date\030\004 \001(\003\022\023\n\013playlist_id\030\005 \003(\003\022\021\n\t" +
      "friend_id\030\006 \003(\003\"\232\001\n\020FriendRequestMsg\022\031\n\021" +
      "friend_request_id\030\001 \002(\003\022\024\n\014requestor_id\030" +
      "\002 \002(\003\022\024\n\014requestee_id\030\003 \002(\003\022\024\n\014request_c",
      "ode\030\004 \002(\t\022\024\n\014updated_date\030\005 \001(\003\022\023\n\013playl" +
      "ist_id\030\006 \003(\003\"N\n\016SearchResponse\022\023\n\013firstR" +
      "esult\030\001 \002(\005\022\024\n\014totalResults\030\002 \002(\005\022\021\n\tobj" +
      "ect_id\030\003 \003(\t\"7\n\016UserConfigItem\022\021\n\titem_n" +
      "ame\030\001 \002(\t\022\022\n\nitem_value\030\002 \002(\t\"G\n\rUserCon" +
      "figMsg\022\017\n\007user_id\030\001 \002(\003\022%\n\004item\030\002 \003(\0132\027." +
      "coreapi.UserConfigItem\"4\n\tUpdateMsg\022\022\n\nu" +
      "pdateHtml\030\001 \002(\t\022\023\n\013updateTitle\030\002 \001(\tB&\n\033" +
      "com.robonobo.core.api.protoB\007CoreApi"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_coreapi_EndPoint_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_coreapi_EndPoint_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_coreapi_EndPoint_descriptor,
              new java.lang.String[] { "Url", },
              com.robonobo.core.api.proto.CoreApi.EndPoint.class,
              com.robonobo.core.api.proto.CoreApi.EndPoint.Builder.class);
          internal_static_coreapi_Node_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_coreapi_Node_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_coreapi_Node_descriptor,
              new java.lang.String[] { "Id", "ApplicationUri", "ProtocolVersion", "Supernode", "Local", "EndPoint", },
              com.robonobo.core.api.proto.CoreApi.Node.class,
              com.robonobo.core.api.proto.CoreApi.Node.Builder.class);
          internal_static_coreapi_NodeList_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_coreapi_NodeList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_coreapi_NodeList_descriptor,
              new java.lang.String[] { "Node", },
              com.robonobo.core.api.proto.CoreApi.NodeList.class,
              com.robonobo.core.api.proto.CoreApi.NodeList.Builder.class);
          internal_static_coreapi_StreamAttributeMsg_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_coreapi_StreamAttributeMsg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_coreapi_StreamAttributeMsg_descriptor,
              new java.lang.String[] { "Name", "Value", },
              com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg.class,
              com.robonobo.core.api.proto.CoreApi.StreamAttributeMsg.Builder.class);
          internal_static_coreapi_StreamMsg_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_coreapi_StreamMsg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_coreapi_StreamMsg_descriptor,
              new java.lang.String[] { "Id", "MimeType", "Title", "Size", "Description", "Duration", "Attribute", },
              com.robonobo.core.api.proto.CoreApi.StreamMsg.class,
              com.robonobo.core.api.proto.CoreApi.StreamMsg.Builder.class);
          internal_static_coreapi_UserMsg_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_coreapi_UserMsg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_coreapi_UserMsg_descriptor,
              new java.lang.String[] { "Id", "Email", "FriendlyName", "InvitesLeft", "Password", "Description", "ImageUrl", "UpdatedDate", "FriendId", "PlaylistId", },
              com.robonobo.core.api.proto.CoreApi.UserMsg.class,
              com.robonobo.core.api.proto.CoreApi.UserMsg.Builder.class);
          internal_static_coreapi_PlaylistMsg_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_coreapi_PlaylistMsg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_coreapi_PlaylistMsg_descriptor,
              new java.lang.String[] { "Id", "Title", "Visibility", "UpdatedDate", "Description", "StreamId", "OwnerId", },
              com.robonobo.core.api.proto.CoreApi.PlaylistMsg.class,
              com.robonobo.core.api.proto.CoreApi.PlaylistMsg.Builder.class);
          internal_static_coreapi_LibraryTrackMsg_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_coreapi_LibraryTrackMsg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_coreapi_LibraryTrackMsg_descriptor,
              new java.lang.String[] { "StreamId", "AddedDate", },
              com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg.class,
              com.robonobo.core.api.proto.CoreApi.LibraryTrackMsg.Builder.class);
          internal_static_coreapi_LibraryMsg_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_coreapi_LibraryMsg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_coreapi_LibraryMsg_descriptor,
              new java.lang.String[] { "UserId", "Track", },
              com.robonobo.core.api.proto.CoreApi.LibraryMsg.class,
              com.robonobo.core.api.proto.CoreApi.LibraryMsg.Builder.class);
          internal_static_coreapi_InviteMsg_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_coreapi_InviteMsg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_coreapi_InviteMsg_descriptor,
              new java.lang.String[] { "InviteId", "Email", "InviteCode", "UpdatedDate", "PlaylistId", "FriendId", },
              com.robonobo.core.api.proto.CoreApi.InviteMsg.class,
              com.robonobo.core.api.proto.CoreApi.InviteMsg.Builder.class);
          internal_static_coreapi_FriendRequestMsg_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_coreapi_FriendRequestMsg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_coreapi_FriendRequestMsg_descriptor,
              new java.lang.String[] { "FriendRequestId", "RequestorId", "RequesteeId", "RequestCode", "UpdatedDate", "PlaylistId", },
              com.robonobo.core.api.proto.CoreApi.FriendRequestMsg.class,
              com.robonobo.core.api.proto.CoreApi.FriendRequestMsg.Builder.class);
          internal_static_coreapi_SearchResponse_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_coreapi_SearchResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_coreapi_SearchResponse_descriptor,
              new java.lang.String[] { "FirstResult", "TotalResults", "ObjectId", },
              com.robonobo.core.api.proto.CoreApi.SearchResponse.class,
              com.robonobo.core.api.proto.CoreApi.SearchResponse.Builder.class);
          internal_static_coreapi_UserConfigItem_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_coreapi_UserConfigItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_coreapi_UserConfigItem_descriptor,
              new java.lang.String[] { "ItemName", "ItemValue", },
              com.robonobo.core.api.proto.CoreApi.UserConfigItem.class,
              com.robonobo.core.api.proto.CoreApi.UserConfigItem.Builder.class);
          internal_static_coreapi_UserConfigMsg_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_coreapi_UserConfigMsg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_coreapi_UserConfigMsg_descriptor,
              new java.lang.String[] { "UserId", "Item", },
              com.robonobo.core.api.proto.CoreApi.UserConfigMsg.class,
              com.robonobo.core.api.proto.CoreApi.UserConfigMsg.Builder.class);
          internal_static_coreapi_UpdateMsg_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_coreapi_UpdateMsg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_coreapi_UpdateMsg_descriptor,
              new java.lang.String[] { "UpdateHtml", "UpdateTitle", },
              com.robonobo.core.api.proto.CoreApi.UpdateMsg.class,
              com.robonobo.core.api.proto.CoreApi.UpdateMsg.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
